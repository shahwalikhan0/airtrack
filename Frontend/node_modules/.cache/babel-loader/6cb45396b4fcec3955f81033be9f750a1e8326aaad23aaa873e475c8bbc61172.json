{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { credentialLogger, formatError } from \"../util/logging\";\nconst credentialName = \"OnBehalfOfCredential\";\nconst BrowserNotSupportedError = new Error(`${credentialName}: Not supported in the browser.`);\nconst logger = credentialLogger(credentialName);\n/**\n * Enables authentication to Azure Active Directory using the [On Behalf Of flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow).\n */\nexport class OnBehalfOfCredential {\n  /**\n   * Only available in Node.js\n   */\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n  getToken() {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}","map":{"version":3,"names":["credentialLogger","formatError","credentialName","BrowserNotSupportedError","Error","logger","OnBehalfOfCredential","constructor","info","getToken"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/@azure/identity/src/credentials/onBehalfOfCredential.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, TokenCredential } from \"@azure/core-auth\";\nimport { credentialLogger, formatError } from \"../util/logging\";\n\nconst credentialName = \"OnBehalfOfCredential\";\nconst BrowserNotSupportedError = new Error(`${credentialName}: Not supported in the browser.`);\nconst logger = credentialLogger(credentialName);\n\n/**\n * Enables authentication to Azure Active Directory using the [On Behalf Of flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow).\n */\nexport class OnBehalfOfCredential implements TokenCredential {\n  /**\n   * Only available in Node.js\n   */\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n\n  public getToken(): Promise<AccessToken | null> {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,iBAAiB;AAE/D,MAAMC,cAAc,GAAG,sBAAsB;AAC7C,MAAMC,wBAAwB,GAAG,IAAIC,KAAK,CAAC,GAAGF,cAAc,iCAAiC,CAAC;AAC9F,MAAMG,MAAM,GAAGL,gBAAgB,CAACE,cAAc,CAAC;AAE/C;;;AAGA,OAAM,MAAOI,oBAAoB;EAC/B;;;EAGAC,YAAA;IACEF,MAAM,CAACG,IAAI,CAACP,WAAW,CAAC,EAAE,EAAEE,wBAAwB,CAAC,CAAC;IACtD,MAAMA,wBAAwB;EAChC;EAEOM,QAAQA,CAAA;IACbJ,MAAM,CAACI,QAAQ,CAACD,IAAI,CAACP,WAAW,CAAC,EAAE,EAAEE,wBAAwB,CAAC,CAAC;IAC/D,MAAMA,wBAAwB;EAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}