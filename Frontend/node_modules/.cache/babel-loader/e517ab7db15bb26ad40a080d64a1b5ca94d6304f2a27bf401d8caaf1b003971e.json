{"ast":null,"code":"'use strict';\n\nconst Duplex = require('stream').Duplex;\nconst kCallback = Symbol('Callback');\nconst kOtherSide = Symbol('Other');\nclass DuplexSocket extends Duplex {\n  constructor(options) {\n    super(options);\n    this[kCallback] = null;\n    this[kOtherSide] = null;\n  }\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n  _write(chunk, encoding, callback) {\n    this[kOtherSide][kCallback] = callback;\n    this[kOtherSide].push(chunk);\n  }\n  _final(callback) {\n    this[kOtherSide].on('end', callback);\n    this[kOtherSide].push(null);\n  }\n}\nclass DuplexPair {\n  constructor(options) {\n    this.socket1 = new DuplexSocket(options);\n    this.socket2 = new DuplexSocket(options);\n    this.socket1[kOtherSide] = this.socket2;\n    this.socket2[kOtherSide] = this.socket1;\n  }\n}\nmodule.exports = DuplexPair;","map":{"version":3,"names":["Duplex","require","kCallback","Symbol","kOtherSide","DuplexSocket","constructor","options","_read","callback","_write","chunk","encoding","push","_final","on","DuplexPair","socket1","socket2","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/native-duplexpair/index.js"],"sourcesContent":["'use strict';\nconst Duplex = require('stream').Duplex;\n\nconst kCallback = Symbol('Callback');\nconst kOtherSide = Symbol('Other');\n\nclass DuplexSocket extends Duplex {\n  constructor(options) {\n    super(options);\n    this[kCallback] = null;\n    this[kOtherSide] = null;\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk, encoding, callback) {\n    this[kOtherSide][kCallback] = callback;\n    this[kOtherSide].push(chunk);\n  }\n\n  _final(callback) {\n    this[kOtherSide].on('end', callback);\n    this[kOtherSide].push(null);\n  }\n}\n\nclass DuplexPair {\n  constructor(options) {\n    this.socket1 = new DuplexSocket(options);\n    this.socket2 = new DuplexSocket(options);\n    this.socket1[kOtherSide] = this.socket2;\n    this.socket2[kOtherSide] = this.socket1;\n  }\n}\n\nmodule.exports = DuplexPair;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;AAEvC,MAAME,SAAS,GAAGC,MAAM,CAAC,UAAU,CAAC;AACpC,MAAMC,UAAU,GAAGD,MAAM,CAAC,OAAO,CAAC;AAElC,MAAME,YAAY,SAASL,MAAM,CAAC;EAChCM,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACL,SAAS,CAAC,GAAG,IAAI;IACtB,IAAI,CAACE,UAAU,CAAC,GAAG,IAAI;EACzB;EAEAI,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACP,SAAS,CAAC;IAChC,IAAIO,QAAQ,EAAE;MACZ,IAAI,CAACP,SAAS,CAAC,GAAG,IAAI;MACtBO,QAAQ,EAAE;IACZ;EACF;EAEAC,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAEH,QAAQ,EAAE;IAChC,IAAI,CAACL,UAAU,CAAC,CAACF,SAAS,CAAC,GAAGO,QAAQ;IACtC,IAAI,CAACL,UAAU,CAAC,CAACS,IAAI,CAACF,KAAK,CAAC;EAC9B;EAEAG,MAAMA,CAACL,QAAQ,EAAE;IACf,IAAI,CAACL,UAAU,CAAC,CAACW,EAAE,CAAC,KAAK,EAAEN,QAAQ,CAAC;IACpC,IAAI,CAACL,UAAU,CAAC,CAACS,IAAI,CAAC,IAAI,CAAC;EAC7B;AACF;AAEA,MAAMG,UAAU,CAAC;EACfV,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACU,OAAO,GAAG,IAAIZ,YAAY,CAACE,OAAO,CAAC;IACxC,IAAI,CAACW,OAAO,GAAG,IAAIb,YAAY,CAACE,OAAO,CAAC;IACxC,IAAI,CAACU,OAAO,CAACb,UAAU,CAAC,GAAG,IAAI,CAACc,OAAO;IACvC,IAAI,CAACA,OAAO,CAACd,UAAU,CAAC,GAAG,IAAI,CAACa,OAAO;EACzC;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGJ,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}