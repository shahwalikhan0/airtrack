{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst MAX = (1 << 16) - 1;\nconst UNKNOWN_PLP_LEN = Buffer.from([0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]);\nconst PLP_TERMINATOR = Buffer.from([0x00, 0x00, 0x00, 0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst MAX_NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\nconst VarBinary = {\n  id: 0xA5,\n  type: 'BIGVARBIN',\n  name: 'VarBinary',\n  maximumLength: 8000,\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    let length;\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n    if (length <= this.maximumLength) {\n      return 'varbinary(' + length + ')';\n    } else {\n      return 'varbinary(max)';\n    }\n  },\n  resolveLength: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function (parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n    if (parameter.length <= this.maximumLength) {\n      buffer.writeUInt16LE(parameter.length, 1);\n    } else {\n      buffer.writeUInt16LE(MAX, 1);\n    }\n    return buffer;\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      if (parameter.length <= this.maximumLength) {\n        return NULL_LENGTH;\n      } else {\n        return MAX_NULL_LENGTH;\n      }\n    }\n    let value = parameter.value;\n    if (!Buffer.isBuffer(value)) {\n      value = value.toString();\n    }\n    const length = Buffer.byteLength(value, 'ucs2');\n    if (parameter.length <= this.maximumLength) {\n      const buffer = Buffer.alloc(2);\n      buffer.writeUInt16LE(length, 0);\n      return buffer;\n    } else {\n      // writePLPBody\n      return UNKNOWN_PLP_LEN;\n    }\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    let value = parameter.value;\n    if (parameter.length <= this.maximumLength) {\n      if (Buffer.isBuffer(value)) {\n        yield value;\n      } else {\n        yield Buffer.from(value.toString(), 'ucs2');\n      }\n    } else {\n      // writePLPBody\n      if (!Buffer.isBuffer(value)) {\n        value = value.toString();\n      }\n      const length = Buffer.byteLength(value, 'ucs2');\n      if (length > 0) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeUInt32LE(length, 0);\n        yield buffer;\n        if (Buffer.isBuffer(value)) {\n          yield value;\n        } else {\n          yield Buffer.from(value, 'ucs2');\n        }\n      }\n      yield PLP_TERMINATOR;\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\nvar _default = VarBinary;\nexports.default = _default;\nmodule.exports = VarBinary;","map":{"version":3,"names":["MAX","UNKNOWN_PLP_LEN","Buffer","from","PLP_TERMINATOR","NULL_LENGTH","MAX_NULL_LENGTH","VarBinary","id","type","name","maximumLength","declaration","parameter","value","length","output","resolveLength","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","isBuffer","toString","byteLength","generateParameterData","writeUInt32LE","validate","TypeError","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/data-types/varbinary.ts"],"sourcesContent":["import { DataType } from '../data-type';\n\nconst MAX = (1 << 16) - 1;\nconst UNKNOWN_PLP_LEN = Buffer.from([0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]);\nconst PLP_TERMINATOR = Buffer.from([0x00, 0x00, 0x00, 0x00]);\n\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst MAX_NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\n\nconst VarBinary: { maximumLength: number } & DataType = {\n  id: 0xA5,\n  type: 'BIGVARBIN',\n  name: 'VarBinary',\n  maximumLength: 8000,\n\n  declaration: function(parameter) {\n    const value = parameter.value as any; // Temporary solution. Remove 'any' later.\n    let length;\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length <= this.maximumLength) {\n      return 'varbinary(' + length + ')';\n    } else {\n      return 'varbinary(max)';\n    }\n  },\n\n  resolveLength: function(parameter) {\n    const value = parameter.value as any; // Temporary solution. Remove 'any' later.\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n\n  generateTypeInfo: function(parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n\n    if (parameter.length! <= this.maximumLength) {\n      buffer.writeUInt16LE(parameter.length!, 1);\n    } else {\n      buffer.writeUInt16LE(MAX, 1);\n    }\n\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      if (parameter.length! <= this.maximumLength) {\n        return NULL_LENGTH;\n      } else {\n        return MAX_NULL_LENGTH;\n      }\n    }\n\n    let value = parameter.value;\n    if (!Buffer.isBuffer(value)) {\n      value = value.toString();\n    }\n\n    const length = Buffer.byteLength(value, 'ucs2');\n\n    if (parameter.length! <= this.maximumLength) {\n      const buffer = Buffer.alloc(2);\n      buffer.writeUInt16LE(length, 0);\n      return buffer;\n    } else { // writePLPBody\n      return UNKNOWN_PLP_LEN;\n    }\n  },\n\n  * generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    let value = parameter.value;\n\n    if (parameter.length! <= this.maximumLength) {\n      if (Buffer.isBuffer(value)) {\n        yield value;\n      } else {\n        yield Buffer.from(value.toString(), 'ucs2');\n      }\n    } else { // writePLPBody\n      if (!Buffer.isBuffer(value)) {\n        value = value.toString();\n      }\n\n      const length = Buffer.byteLength(value, 'ucs2');\n\n      if (length > 0) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeUInt32LE(length, 0);\n        yield buffer;\n\n        if (Buffer.isBuffer(value)) {\n          yield value;\n        } else {\n          yield Buffer.from(value, 'ucs2');\n        }\n      }\n\n      yield PLP_TERMINATOR;\n    }\n  },\n\n  validate: function(value): Buffer | null {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\n\nexport default VarBinary;\nmodule.exports = VarBinary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}