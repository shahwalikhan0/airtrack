{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sprintfJs = require(\"sprintf-js\");\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst optionBufferSize = 20;\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nconst ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nconst encryptByValue = {};\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\nconst MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nconst marsByValue = {};\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n\n/*\n  s2.2.6.4\n */\nclass PreloginPayload {\n  constructor() {\n    let bufferOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      encrypt: false,\n      version: {\n        major: 0,\n        minor: 0,\n        build: 0,\n        subbuild: 0\n      }\n    };\n    this.data = void 0;\n    this.options = void 0;\n    this.version = void 0;\n    this.encryption = void 0;\n    this.encryptionString = void 0;\n    this.instance = void 0;\n    this.threadId = void 0;\n    this.mars = void 0;\n    this.marsString = void 0;\n    this.fedAuthRequired = void 0;\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false,\n        version: {\n          major: 0,\n          minor: 0,\n          build: 0,\n          subbuild: 0\n        }\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n    this.extractOptions();\n  }\n  createOptions() {\n    const options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n    let length = 0;\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n    length++; // terminator\n\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n  createVersionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(this.options.version.major);\n    buffer.writeUInt8(this.options.version.minor);\n    buffer.writeUInt16BE(this.options.version.build);\n    buffer.writeUInt16BE(this.options.version.subbuild);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n  createEncryptionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n  createInstanceOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n  createThreadIdOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n  createMarsOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n  createFedAuthOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n  extractOptions() {\n    let offset = 0;\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n          break;\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n  extractVersion(offset) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      build: this.data.readUInt16BE(offset + 2),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n  extractEncryption(offset) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n  extractInstance(offset) {\n    this.instance = this.data.readUInt8(offset);\n  }\n  extractThreadId(offset) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n  extractMars(offset) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n  extractFedAuth(offset) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n  toString() {\n    let indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.build, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n  }\n}\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;","map":{"version":3,"names":["_sprintfJs","require","_writableTrackingBuffer","_interopRequireDefault","optionBufferSize","TOKEN","VERSION","ENCRYPTION","INSTOPT","THREADID","MARS","FEDAUTHREQUIRED","TERMINATOR","ENCRYPT","OFF","ON","NOT_SUP","REQ","encryptByValue","name","value","marsByValue","PreloginPayload","constructor","bufferOrOptions","arguments","length","undefined","encrypt","version","major","minor","build","subbuild","data","options","encryption","encryptionString","instance","threadId","mars","marsString","fedAuthRequired","Buffer","createOptions","extractOptions","createVersionOption","createEncryptionOption","createInstanceOption","createThreadIdOption","createMarsOption","createFedAuthOption","i","len","option","alloc","optionOffset","optionDataOffset","j","writeUInt8","token","writeUInt16BE","copy","buffer","default","writeUInt32BE","offset","dataOffset","readUInt16BE","dataLength","extractVersion","extractEncryption","extractInstance","extractThreadId","extractMars","extractFedAuth","readUInt8","readUInt32BE","toString","indent","sprintf","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/prelogin-payload.ts"],"sourcesContent":["import { sprintf } from 'sprintf-js';\n\nimport WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\n\nconst optionBufferSize = 20;\n\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\n\nconst ENCRYPT: { [key: string]: number } = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\n\nconst encryptByValue: { [key: number]: string } = {};\n\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\n\nconst MARS: { [key: string]: number } = {\n  OFF: 0x00,\n  ON: 0x01\n};\n\nconst marsByValue: { [key: number]: string } = {};\n\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n\ninterface Options {\n  encrypt: boolean;\n  version: {\n    major: number;\n    minor: number;\n    build: number;\n    subbuild: number;\n  };\n}\n\n/*\n  s2.2.6.4\n */\nclass PreloginPayload {\n  data!: Buffer;\n  options: Options;\n\n  version!: {\n    major: number;\n    minor: number;\n    build: number;\n    subbuild: number;\n  };\n\n  encryption!: number;\n  encryptionString!: string;\n\n  instance!: number;\n\n  threadId!: number;\n\n  mars!: number;\n  marsString!: string;\n  fedAuthRequired!: number;\n\n  constructor(bufferOrOptions: Buffer | Options = { encrypt: false, version: { major: 0, minor: 0, build: 0, subbuild: 0 } }) {\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = { encrypt: false, version: { major: 0, minor: 0, build: 0, subbuild: 0 } };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n    this.extractOptions();\n  }\n\n  createOptions() {\n    const options = [\n      this.createVersionOption(),\n      this.createEncryptionOption(),\n      this.createInstanceOption(),\n      this.createThreadIdOption(),\n      this.createMarsOption(),\n      this.createFedAuthOption()\n    ];\n\n    let length = 0;\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n    length++; // terminator\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n\n  createVersionOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(this.options.version.major);\n    buffer.writeUInt8(this.options.version.minor);\n    buffer.writeUInt16BE(this.options.version.build);\n    buffer.writeUInt16BE(this.options.version.subbuild);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n\n  createEncryptionOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n\n  createInstanceOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n\n  createThreadIdOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n\n  createMarsOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n\n  createFedAuthOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n\n  extractOptions() {\n    let offset = 0;\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n          break;\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n\n  extractVersion(offset: number) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      build: this.data.readUInt16BE(offset + 2),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n\n  extractEncryption(offset: number) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n\n  extractInstance(offset: number) {\n    this.instance = this.data.readUInt8(offset);\n  }\n\n  extractThreadId(offset: number) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n\n  extractMars(offset: number) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n\n  extractFedAuth(offset: number) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n\n  toString(indent = '') {\n    return indent + 'PreLogin - ' + sprintf(\n      'version:%d.%d.%d.%d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)',\n      this.version.major, this.version.minor, this.version.build, this.version.subbuild,\n      this.encryption ? this.encryption : 0,\n      this.encryptionString ? this.encryptionString : '',\n      this.instance ? this.instance : 0,\n      this.threadId ? this.threadId : 0,\n      this.mars ? this.mars : 0,\n      this.marsString ? this.marsString : ''\n    );\n  }\n}\n\nexport default PreloginPayload;\nmodule.exports = PreloginPayload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}