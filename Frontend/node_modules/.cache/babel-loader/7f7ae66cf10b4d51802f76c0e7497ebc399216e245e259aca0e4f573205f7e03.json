{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\nvar _jsMd = _interopRequireDefault(require(\"js-md4\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass NTLMResponsePayload {\n  constructor(loginData) {\n    this.data = void 0;\n    this.data = this.createResponse(loginData);\n  }\n  toString() {\n    let indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return indent + 'NTLM Auth';\n  }\n  createResponse(challenge) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + domain.length * 2 + username.length * 2 + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new _writableTrackingBuffer.default(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n    return client_nonce;\n  }\n  ntlmv2Response(domain, user, password, serverNonce, targetInfo, clientNonce, mytime) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n  createTimestamp(time) {\n    const tenthsOfAMicrosecond = (BigInt(time) + BigInt(11644473600)) * BigInt(10000000);\n    const lo = Number(tenthsOfAMicrosecond & BigInt(0xffffffff));\n    const hi = Number(tenthsOfAMicrosecond >> BigInt(32) & BigInt(0xffffffff));\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n  lmv2Response(domain, user, password, serverNonce, clientNonce) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n    return response;\n  }\n  ntv2Hash(domain, user, password) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n  ntHash(text) {\n    const unicodeString = Buffer.from(text, 'ucs2');\n    return Buffer.from(_jsMd.default.arrayBuffer(unicodeString));\n  }\n  hmacMD5(data, key) {\n    return crypto.createHmac('MD5', key).update(data).digest();\n  }\n}\nvar _default = NTLMResponsePayload;\nexports.default = _default;\nmodule.exports = NTLMResponsePayload;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","crypto","_interopRequireWildcard","_jsMd","NTLMResponsePayload","constructor","loginData","data","createResponse","toString","indent","arguments","length","undefined","challenge","client_nonce","createClientNonce","lmv2len","ntlmv2len","domain","username","userName","password","ntlmData","ntlmpacket","server_data","target","server_nonce","nonce","bufferLength","default","position","writeString","writeUInt32LE","baseIdx","dnIdx","unIdx","l2Idx","ntIdx","writeUInt16LE","lmv2Data","lmv2Response","copyFrom","genTime","Date","getTime","ntlmDataBuffer","ntlmv2Response","timestamp","createTimestamp","Buffer","alloc","nidx","writeUInt8","Math","ceil","random","user","serverNonce","targetInfo","clientNonce","mytime","hash","ntv2Hash","dataLength","copy","hmacMD5","time","tenthsOfAMicrosecond","BigInt","lo","Number","hi","result","newhash","response","ntHash","identity","from","toUpperCase","text","unicodeString","arrayBuffer","key","createHmac","update","digest","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/ntlm-payload.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport * as crypto from 'crypto';\nimport md4 from 'js-md4';\n\ninterface Options {\n  domain: string;\n  userName: string;\n  password: string;\n  ntlmpacket: {\n    target: Buffer;\n    nonce: Buffer;\n  };\n}\n\nclass NTLMResponsePayload {\n  data: Buffer;\n\n  constructor(loginData: Options) {\n    this.data = this.createResponse(loginData);\n  }\n\n  toString(indent = '') {\n    return indent + 'NTLM Auth';\n  }\n\n  createResponse(challenge: Options) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + (domain.length * 2) + (username.length * 2) + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new WritableTrackingBuffer(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n    return client_nonce;\n  }\n\n  ntlmv2Response(domain: string, user: string, password: string, serverNonce: Buffer, targetInfo: Buffer, clientNonce: Buffer, mytime: number) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n\n  createTimestamp(time: number) {\n    const tenthsOfAMicrosecond = (BigInt(time) + BigInt(11644473600)) * BigInt(10000000);\n\n    const lo = Number(tenthsOfAMicrosecond & BigInt(0xffffffff));\n    const hi = Number((tenthsOfAMicrosecond >> BigInt(32)) & BigInt(0xffffffff));\n\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n\n  lmv2Response(domain: string, user: string, password: string, serverNonce: Buffer, clientNonce: Buffer) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n\n    return response;\n  }\n\n  ntv2Hash(domain: string, user: string, password: string) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n\n  ntHash(text: string) {\n    const unicodeString = Buffer.from(text, 'ucs2');\n    return Buffer.from(md4.arrayBuffer(unicodeString));\n  }\n\n  hmacMD5(data: Buffer, key: Buffer) {\n    return crypto.createHmac('MD5', key).update(data).digest();\n  }\n}\n\nexport default NTLMResponsePayload;\nmodule.exports = NTLMResponsePayload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}