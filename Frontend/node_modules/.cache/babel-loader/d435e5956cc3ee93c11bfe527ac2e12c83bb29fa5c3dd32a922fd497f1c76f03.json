{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request, next) {\n      if (request.formData) {\n        const formData = request.formData;\n        const requestForm = new FormData();\n        for (const formKey of Object.keys(formData)) {\n          const formValue = formData[formKey];\n          if (Array.isArray(formValue)) {\n            for (const subValue of formValue) {\n              requestForm.append(formKey, subValue);\n            }\n          } else {\n            requestForm.append(formKey, formValue);\n          }\n        }\n        request.body = requestForm;\n        request.formData = undefined;\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = new URLSearchParams(requestForm).toString();\n        } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n          // browser will automatically apply a suitable content-type header\n          request.headers.delete(\"Content-Type\");\n        }\n      }\n      return next(request);\n    }\n  };\n}","map":{"version":3,"names":["formDataPolicyName","formDataPolicy","name","sendRequest","request","next","formData","requestForm","FormData","formKey","Object","keys","formValue","Array","isArray","subValue","append","body","undefined","contentType","headers","get","indexOf","URLSearchParams","toString","delete"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/@azure/core-rest-pipeline/src/policies/formDataPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces\";\nimport { PipelinePolicy } from \"../pipeline\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (request.formData) {\n        const formData = request.formData;\n        const requestForm = new FormData();\n        for (const formKey of Object.keys(formData)) {\n          const formValue = formData[formKey];\n          if (Array.isArray(formValue)) {\n            for (const subValue of formValue) {\n              requestForm.append(formKey, subValue);\n            }\n          } else {\n            requestForm.append(formKey, formValue);\n          }\n        }\n\n        request.body = requestForm;\n        request.formData = undefined;\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = new URLSearchParams(requestForm as any).toString();\n        } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n          // browser will automatically apply a suitable content-type header\n          request.headers.delete(\"Content-Type\");\n        }\n      }\n      return next(request);\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AAKA;;;AAGA,OAAO,MAAMA,kBAAkB,GAAG,gBAAgB;AAElD;;;AAGA,OAAM,SAAUC,cAAcA,CAAA;EAC5B,OAAO;IACLC,IAAI,EAAEF,kBAAkB;IACxB,MAAMG,WAAWA,CAACC,OAAwB,EAAEC,IAAiB;MAC3D,IAAID,OAAO,CAACE,QAAQ,EAAE;QACpB,MAAMA,QAAQ,GAAGF,OAAO,CAACE,QAAQ;QACjC,MAAMC,WAAW,GAAG,IAAIC,QAAQ,EAAE;QAClC,KAAK,MAAMC,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC,EAAE;UAC3C,MAAMM,SAAS,GAAGN,QAAQ,CAACG,OAAO,CAAC;UACnC,IAAII,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;YAC5B,KAAK,MAAMG,QAAQ,IAAIH,SAAS,EAAE;cAChCL,WAAW,CAACS,MAAM,CAACP,OAAO,EAAEM,QAAQ,CAAC;;WAExC,MAAM;YACLR,WAAW,CAACS,MAAM,CAACP,OAAO,EAAEG,SAAS,CAAC;;;QAI1CR,OAAO,CAACa,IAAI,GAAGV,WAAW;QAC1BH,OAAO,CAACE,QAAQ,GAAGY,SAAS;QAC5B,MAAMC,WAAW,GAAGf,OAAO,CAACgB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QACvD,IAAIF,WAAW,IAAIA,WAAW,CAACG,OAAO,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC,EAAE;UAClFlB,OAAO,CAACa,IAAI,GAAG,IAAIM,eAAe,CAAChB,WAAkB,CAAC,CAACiB,QAAQ,EAAE;SAClE,MAAM,IAAIL,WAAW,IAAIA,WAAW,CAACG,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;UAC3E;UACAlB,OAAO,CAACgB,OAAO,CAACK,MAAM,CAAC,cAAc,CAAC;;;MAG1C,OAAOpB,IAAI,CAACD,OAAO,CAAC;IACtB;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}