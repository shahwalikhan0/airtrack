{"ast":null,"code":"'use strict';\n\nvar TYPES = require('./datatypes').TYPES;\nvar Table = require('./table');\nvar PromiseLibrary = Promise;\nvar driver = {};\nvar map = [];\n\n/**\n * Register you own type map.\n *\n * @path module.exports.map\n * @param {*} jstype JS data type.\n * @param {*} sqltype SQL data type.\n */\n\nmap.register = function (jstype, sqltype) {\n  for (var index = 0; index < this.length; index++) {\n    var item = this[index];\n    if (item.js === jstype) {\n      this.splice(index, 1);\n      break;\n    }\n  }\n  this.push({\n    js: jstype,\n    sql: sqltype\n  });\n  return null;\n};\nmap.register(String, TYPES.NVarChar);\nmap.register(Number, TYPES.Int);\nmap.register(Boolean, TYPES.Bit);\nmap.register(Date, TYPES.DateTime);\nmap.register(Buffer, TYPES.VarBinary);\nmap.register(Table, TYPES.TVP);\n\n/**\n * @ignore\n */\n\nvar getTypeByValue = function getTypeByValue(value) {\n  if (value === null || value === undefined) {\n    return TYPES.NVarChar;\n  }\n  switch (typeof value) {\n    case 'string':\n      for (var _i = 0, _Array$from = Array.from(map); _i < _Array$from.length; _i++) {\n        var item = _Array$from[_i];\n        if (item.js === String) {\n          return item.sql;\n        }\n      }\n      return TYPES.NVarChar;\n    case 'number':\n    case 'bigint':\n      if (value % 1 === 0) {\n        if (value < -2147483648 || value > 2147483647) {\n          return TYPES.BigInt;\n        } else {\n          return TYPES.Int;\n        }\n      } else {\n        return TYPES.Float;\n      }\n    case 'boolean':\n      for (var _i2 = 0, _Array$from2 = Array.from(map); _i2 < _Array$from2.length; _i2++) {\n        var _item = _Array$from2[_i2];\n        if (_item.js === Boolean) {\n          return _item.sql;\n        }\n      }\n      return TYPES.Bit;\n    case 'object':\n      for (var _i3 = 0, _Array$from3 = Array.from(map); _i3 < _Array$from3.length; _i3++) {\n        var _item2 = _Array$from3[_i3];\n        if (value instanceof _item2.js) {\n          return _item2.sql;\n        }\n      }\n      return TYPES.NVarChar;\n    default:\n      return TYPES.NVarChar;\n  }\n};\nmodule.exports = {\n  driver: driver,\n  getTypeByValue: getTypeByValue,\n  map: map\n};\nObject.defineProperty(module.exports, 'Promise', {\n  get: function get() {\n    return PromiseLibrary;\n  },\n  set: function set(value) {\n    PromiseLibrary = value;\n  }\n});\nObject.defineProperty(module.exports, 'valueHandler', {\n  enumerable: true,\n  value: new Map(),\n  writable: false,\n  configurable: false\n});","map":{"version":3,"names":["TYPES","require","Table","PromiseLibrary","Promise","driver","map","register","jstype","sqltype","index","length","item","js","splice","push","sql","String","NVarChar","Number","Int","Boolean","Bit","Date","DateTime","Buffer","VarBinary","TVP","getTypeByValue","value","undefined","_i","_Array$from","Array","from","BigInt","Float","_i2","_Array$from2","_i3","_Array$from3","module","exports","Object","defineProperty","get","set","enumerable","Map","writable","configurable"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/mssql/lib/shared.js"],"sourcesContent":["'use strict'\n\nconst TYPES = require('./datatypes').TYPES\nconst Table = require('./table')\n\nlet PromiseLibrary = Promise\nconst driver = {}\nconst map = []\n\n/**\n * Register you own type map.\n *\n * @path module.exports.map\n * @param {*} jstype JS data type.\n * @param {*} sqltype SQL data type.\n */\n\nmap.register = function (jstype, sqltype) {\n  for (let index = 0; index < this.length; index++) {\n    const item = this[index]\n    if (item.js === jstype) {\n      this.splice(index, 1)\n      break\n    }\n  }\n\n  this.push({\n    js: jstype,\n    sql: sqltype\n  })\n\n  return null\n}\n\nmap.register(String, TYPES.NVarChar)\nmap.register(Number, TYPES.Int)\nmap.register(Boolean, TYPES.Bit)\nmap.register(Date, TYPES.DateTime)\nmap.register(Buffer, TYPES.VarBinary)\nmap.register(Table, TYPES.TVP)\n\n/**\n * @ignore\n */\n\nconst getTypeByValue = function (value) {\n  if ((value === null) || (value === undefined)) { return TYPES.NVarChar }\n\n  switch (typeof value) {\n    case 'string':\n      for (const item of Array.from(map)) {\n        if (item.js === String) {\n          return item.sql\n        }\n      }\n\n      return TYPES.NVarChar\n\n    case 'number':\n    case 'bigint':\n      if (value % 1 === 0) {\n        if (value < -2147483648 || value > 2147483647) {\n          return TYPES.BigInt\n        } else {\n          return TYPES.Int\n        }\n      } else {\n        return TYPES.Float\n      }\n\n    case 'boolean':\n      for (const item of Array.from(map)) {\n        if (item.js === Boolean) {\n          return item.sql\n        }\n      }\n\n      return TYPES.Bit\n\n    case 'object':\n      for (const item of Array.from(map)) {\n        if (value instanceof item.js) {\n          return item.sql\n        }\n      }\n\n      return TYPES.NVarChar\n\n    default:\n      return TYPES.NVarChar\n  }\n}\n\nmodule.exports = {\n  driver,\n  getTypeByValue,\n  map\n}\n\nObject.defineProperty(module.exports, 'Promise', {\n  get: () => {\n    return PromiseLibrary\n  },\n  set: (value) => {\n    PromiseLibrary = value\n  }\n})\n\nObject.defineProperty(module.exports, 'valueHandler', {\n  enumerable: true,\n  value: new Map(),\n  writable: false,\n  configurable: false\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}