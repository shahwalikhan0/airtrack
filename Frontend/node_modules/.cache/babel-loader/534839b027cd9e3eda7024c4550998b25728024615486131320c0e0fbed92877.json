{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transaction = exports.OPERATION_TYPE = exports.ISOLATION_LEVEL = void 0;\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\nexports.isolationLevelByValue = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar _allHeaders = require(\"./all-headers\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/*\n  s2.2.6.8\n */\nconst OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nconst ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nconst isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\nfunction assertValidIsolationLevel(isolationLevel, name) {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\n  }\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\n  }\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\n  }\n}\nclass Transaction {\n  constructor(name) {\n    let isolationLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ISOLATION_LEVEL.NO_CHANGE;\n    this.name = void 0;\n    this.isolationLevel = void 0;\n    this.outstandingRequestCount = void 0;\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n  beginPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n  commitPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n  rollbackPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n  savePayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n    return '';\n  }\n}\nexports.Transaction = Transaction;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","OPERATION_TYPE","TM_GET_DTC_ADDRESS","TM_PROPAGATE_XACT","TM_BEGIN_XACT","TM_PROMOTE_XACT","TM_COMMIT_XACT","TM_ROLLBACK_XACT","TM_SAVE_XACT","ISOLATION_LEVEL","NO_CHANGE","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","isolationLevelByValue","name","value","assertValidIsolationLevel","isolationLevel","TypeError","includes","Number","isInteger","RangeError","Transaction","constructor","arguments","length","undefined","outstandingRequestCount","beginPayload","txnDescriptor","buffer","default","writeToTrackingBuffer","writeUShort","writeUInt8","writeString","Symbol","iterator","data","toString","commitPayload","rollbackPayload","savePayload","isolationLevelToTSQL"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/transaction.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport { writeToTrackingBuffer } from './all-headers';\n\n/*\n  s2.2.6.8\n */\n\nexport const OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\n\nexport const ISOLATION_LEVEL: { [key: string]: number } = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\n\nexport const isolationLevelByValue: { [key: number]: string } = {};\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nexport function assertValidIsolationLevel(isolationLevel: any, name: string): asserts isolationLevel is 0 | 1 | 2 | 3 | 4 | 5 {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\n  }\n\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\n  }\n\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\n  }\n}\n\nexport class Transaction {\n  name: string;\n  isolationLevel: number;\n  outstandingRequestCount: number;\n\n  constructor(name: string, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  beginPayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ucs2');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n\n  commitPayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ascii');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    // No fBeginXact flag, so no new transaction is started.\n    buffer.writeUInt8(0);\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  rollbackPayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ascii');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    // No fBeginXact flag, so no new transaction is started.\n    buffer.writeUInt8(0);\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  savePayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ascii');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n    return '';\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}