{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar _allHeaders = require(\"./all-headers\");\nlet _Symbol$iterator;\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n_Symbol$iterator = Symbol.iterator;\n\n/*\n  s2.2.6.6\n */\nclass SqlBatchPayload {\n  constructor(sqlText, txnDescriptor, options) {\n    this.sqlText = void 0;\n    this.txnDescriptor = void 0;\n    this.options = void 0;\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n  *[_Symbol$iterator]() {\n    if (this.options.tdsVersion >= '7_2') {\n      const buffer = new _writableTrackingBuffer.default(18, 'ucs2');\n      const outstandingRequestCount = 1;\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n      yield buffer.data;\n    }\n    yield Buffer.from(this.sqlText, 'ucs2');\n  }\n  toString() {\n    let indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return indent + ('SQL Batch - ' + this.sqlText);\n  }\n}\nvar _default = SqlBatchPayload;\nexports.default = _default;\nmodule.exports = SqlBatchPayload;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","Symbol","iterator","SqlBatchPayload","constructor","sqlText","txnDescriptor","options","_Symbol$iterator","tdsVersion","buffer","default","outstandingRequestCount","writeToTrackingBuffer","data","Buffer","from","toString","indent","arguments","length","undefined","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/sqlbatch-payload.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport { writeToTrackingBuffer } from './all-headers';\n\n/*\n  s2.2.6.6\n */\nclass SqlBatchPayload implements Iterable<Buffer> {\n  sqlText: string;\n  txnDescriptor: Buffer;\n  options: { tdsVersion: string };\n\n  constructor(sqlText: string, txnDescriptor: Buffer, options: { tdsVersion: string }) {\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n\n  *[Symbol.iterator]() {\n    if (this.options.tdsVersion >= '7_2') {\n      const buffer = new WritableTrackingBuffer(18, 'ucs2');\n      const outstandingRequestCount = 1;\n\n      writeToTrackingBuffer(buffer, this.txnDescriptor, outstandingRequestCount);\n\n      yield buffer.data;\n    }\n\n    yield Buffer.from(this.sqlText, 'ucs2');\n  }\n\n  toString(indent = '') {\n    return indent + ('SQL Batch - ' + this.sqlText);\n  }\n}\n\nexport default SqlBatchPayload;\nmodule.exports = SqlBatchPayload;\n"],"mappings":";;;;;;AAAA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;;;;;;;mBAgBIE,MAAM,CAACC,Q;;AAdX;AACA;AACA;AACA,MAAMC,eAAN,CAAkD;EAKhDC,WAAWA,CAACC,OAAD,EAAkBC,aAAlB,EAAyCC,OAAzC,EAA0E;IAAA,KAJrFF,OAIqF;IAAA,KAHrFC,aAGqF;IAAA,KAFrFC,OAEqF;IACnF,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;EAED,EAAAC,gBAAA,IAAqB;IACnB,IAAI,KAAKD,OAAL,CAAaE,UAAb,IAA2B,KAA/B,EAAsC;MACpC,MAAMC,MAAM,GAAG,IAAIb,uBAAA,CAAAc,OAAJ,CAA2B,EAA3B,EAA+B,MAA/B,CAAf;MACA,MAAMC,uBAAuB,GAAG,CAAhC;MAEA,IAAAZ,WAAA,CAAAa,qBAAA,EAAsBH,MAAtB,EAA8B,KAAKJ,aAAnC,EAAkDM,uBAAlD;MAEA,MAAMF,MAAM,CAACI,IAAb;IACD;IAED,MAAMC,MAAM,CAACC,IAAP,CAAY,KAAKX,OAAjB,EAA0B,MAA1B,CAAN;EACD;EAEDY,QAAQA,CAAA,EAAc;IAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAV;IACN,OAAOD,MAAM,IAAI,iBAAiB,KAAKb,OAA1B,CAAb;EACD;AA1B+C;eA6BnCF,e;;AACfmB,MAAM,CAACC,OAAP,GAAiBpB,eAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}