{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar _allHeaders = require(\"./all-headers\");\nlet _Symbol$iterator;\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// const OPTION = {\n//   WITH_RECOMPILE: 0x01,\n//   NO_METADATA: 0x02,\n//   REUSE_METADATA: 0x04\n// };\nconst STATUS = {\n  BY_REF_VALUE: 0x01,\n  DEFAULT_VALUE: 0x02\n};\n/*\n  s2.2.6.5\n */\n\n_Symbol$iterator = Symbol.iterator;\nclass RpcRequestPayload {\n  constructor(procedure, parameters, txnDescriptor, options, collation) {\n    this.procedure = void 0;\n    this.parameters = void 0;\n    this.options = void 0;\n    this.txnDescriptor = void 0;\n    this.collation = void 0;\n    this.procedure = procedure;\n    this.parameters = parameters;\n    this.options = options;\n    this.txnDescriptor = txnDescriptor;\n    this.collation = collation;\n  }\n  [_Symbol$iterator]() {\n    return this.generateData();\n  }\n  *generateData() {\n    const buffer = new _writableTrackingBuffer.default(500);\n    if (this.options.tdsVersion >= '7_2') {\n      const outstandingRequestCount = 1;\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n    }\n    if (typeof this.procedure === 'string') {\n      buffer.writeUsVarchar(this.procedure);\n    } else {\n      buffer.writeUShort(0xFFFF);\n      buffer.writeUShort(this.procedure);\n    }\n    const optionFlags = 0;\n    buffer.writeUInt16LE(optionFlags);\n    yield buffer.data;\n    const parametersLength = this.parameters.length;\n    for (let i = 0; i < parametersLength; i++) {\n      yield* this.generateParameterData(this.parameters[i]);\n    }\n  }\n  toString() {\n    let indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return indent + ('RPC Request - ' + this.procedure);\n  }\n  *generateParameterData(parameter) {\n    const buffer = new _writableTrackingBuffer.default(1 + 2 + Buffer.byteLength(parameter.name, 'ucs-2') + 1);\n    buffer.writeBVarchar('@' + parameter.name);\n    let statusFlags = 0;\n    if (parameter.output) {\n      statusFlags |= STATUS.BY_REF_VALUE;\n    }\n    buffer.writeUInt8(statusFlags);\n    yield buffer.data;\n    const param = {\n      value: parameter.value\n    };\n    const type = parameter.type;\n    if ((type.id & 0x30) === 0x20) {\n      if (parameter.length) {\n        param.length = parameter.length;\n      } else if (type.resolveLength) {\n        param.length = type.resolveLength(parameter);\n      }\n    }\n    if (parameter.precision) {\n      param.precision = parameter.precision;\n    } else if (type.resolvePrecision) {\n      param.precision = type.resolvePrecision(parameter);\n    }\n    if (parameter.scale) {\n      param.scale = parameter.scale;\n    } else if (type.resolveScale) {\n      param.scale = type.resolveScale(parameter);\n    }\n    if (this.collation) {\n      param.collation = this.collation;\n    }\n    yield type.generateTypeInfo(param, this.options);\n    yield type.generateParameterLength(param, this.options);\n    yield* type.generateParameterData(param, this.options);\n  }\n}\nvar _default = RpcRequestPayload;\nexports.default = _default;\nmodule.exports = RpcRequestPayload;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","STATUS","BY_REF_VALUE","DEFAULT_VALUE","Symbol","iterator","RpcRequestPayload","constructor","procedure","parameters","txnDescriptor","options","collation","_Symbol$iterator","generateData","buffer","default","tdsVersion","outstandingRequestCount","writeToTrackingBuffer","writeUsVarchar","writeUShort","optionFlags","writeUInt16LE","data","parametersLength","length","i","generateParameterData","toString","indent","arguments","undefined","parameter","Buffer","byteLength","name","writeBVarchar","statusFlags","output","writeUInt8","param","value","type","id","resolveLength","precision","resolvePrecision","scale","resolveScale","generateTypeInfo","generateParameterLength","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/rpcrequest-payload.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport { writeToTrackingBuffer } from './all-headers';\nimport { Parameter, ParameterData } from './data-type';\nimport { InternalConnectionOptions } from './connection';\nimport { Collation } from './collation';\n\n// const OPTION = {\n//   WITH_RECOMPILE: 0x01,\n//   NO_METADATA: 0x02,\n//   REUSE_METADATA: 0x04\n// };\n\nconst STATUS = {\n  BY_REF_VALUE: 0x01,\n  DEFAULT_VALUE: 0x02\n};\n\n/*\n  s2.2.6.5\n */\nclass RpcRequestPayload implements Iterable<Buffer> {\n  procedure: string | number;\n  parameters: Parameter[];\n\n  options: InternalConnectionOptions;\n  txnDescriptor: Buffer;\n  collation: Collation | undefined;\n\n  constructor(procedure: string | number, parameters: Parameter[], txnDescriptor: Buffer, options: InternalConnectionOptions, collation: Collation | undefined) {\n    this.procedure = procedure;\n    this.parameters = parameters;\n    this.options = options;\n    this.txnDescriptor = txnDescriptor;\n    this.collation = collation;\n  }\n\n  [Symbol.iterator]() {\n    return this.generateData();\n  }\n\n  * generateData() {\n    const buffer = new WritableTrackingBuffer(500);\n    if (this.options.tdsVersion >= '7_2') {\n      const outstandingRequestCount = 1;\n      writeToTrackingBuffer(buffer, this.txnDescriptor, outstandingRequestCount);\n    }\n\n    if (typeof this.procedure === 'string') {\n      buffer.writeUsVarchar(this.procedure);\n    } else {\n      buffer.writeUShort(0xFFFF);\n      buffer.writeUShort(this.procedure);\n    }\n\n    const optionFlags = 0;\n    buffer.writeUInt16LE(optionFlags);\n    yield buffer.data;\n\n    const parametersLength = this.parameters.length;\n    for (let i = 0; i < parametersLength; i++) {\n      yield * this.generateParameterData(this.parameters[i]);\n    }\n  }\n\n  toString(indent = '') {\n    return indent + ('RPC Request - ' + this.procedure);\n  }\n\n  * generateParameterData(parameter: Parameter) {\n    const buffer = new WritableTrackingBuffer(1 + 2 + Buffer.byteLength(parameter.name, 'ucs-2') + 1);\n    buffer.writeBVarchar('@' + parameter.name);\n\n    let statusFlags = 0;\n    if (parameter.output) {\n      statusFlags |= STATUS.BY_REF_VALUE;\n    }\n    buffer.writeUInt8(statusFlags);\n\n    yield buffer.data;\n\n    const param: ParameterData = { value: parameter.value };\n\n    const type = parameter.type;\n\n    if ((type.id & 0x30) === 0x20) {\n      if (parameter.length) {\n        param.length = parameter.length;\n      } else if (type.resolveLength) {\n        param.length = type.resolveLength(parameter);\n      }\n    }\n\n    if (parameter.precision) {\n      param.precision = parameter.precision;\n    } else if (type.resolvePrecision) {\n      param.precision = type.resolvePrecision(parameter);\n    }\n\n    if (parameter.scale) {\n      param.scale = parameter.scale;\n    } else if (type.resolveScale) {\n      param.scale = type.resolveScale(parameter);\n    }\n\n    if (this.collation) {\n      param.collation = this.collation;\n    }\n\n    yield type.generateTypeInfo(param, this.options);\n    yield type.generateParameterLength(param, this.options);\n    yield * type.generateParameterData(param, this.options);\n  }\n}\n\nexport default RpcRequestPayload;\nmodule.exports = RpcRequestPayload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}