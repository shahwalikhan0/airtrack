{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Token = exports.TYPE = exports.SSPIToken = exports.RowToken = exports.RoutingEnvChangeToken = exports.RollbackTransactionEnvChangeToken = exports.ReturnValueToken = exports.ReturnStatusToken = exports.ResetConnectionEnvChangeToken = exports.PacketSizeEnvChangeToken = exports.OrderToken = exports.NBCRowToken = exports.LoginAckToken = exports.LanguageEnvChangeToken = exports.InfoMessageToken = exports.FedAuthInfoToken = exports.FeatureExtAckToken = exports.ErrorMessageToken = exports.DoneToken = exports.DoneProcToken = exports.DoneInProcToken = exports.DatabaseMirroringPartnerEnvChangeToken = exports.DatabaseEnvChangeToken = exports.CommitTransactionEnvChangeToken = exports.CollationChangeToken = exports.ColMetadataToken = exports.CharsetEnvChangeToken = exports.BeginTransactionEnvChangeToken = void 0;\nconst TYPE = {\n  ALTMETADATA: 0x88,\n  ALTROW: 0xD3,\n  COLMETADATA: 0x81,\n  COLINFO: 0xA5,\n  DONE: 0xFD,\n  DONEPROC: 0xFE,\n  DONEINPROC: 0xFF,\n  ENVCHANGE: 0xE3,\n  ERROR: 0xAA,\n  FEATUREEXTACK: 0xAE,\n  FEDAUTHINFO: 0xEE,\n  INFO: 0xAB,\n  LOGINACK: 0xAD,\n  NBCROW: 0xD2,\n  OFFSET: 0x78,\n  ORDER: 0xA9,\n  RETURNSTATUS: 0x79,\n  RETURNVALUE: 0xAC,\n  ROW: 0xD1,\n  SSPI: 0xED,\n  TABNAME: 0xA4\n};\nexports.TYPE = TYPE;\nclass Token {\n  constructor(name, handlerName) {\n    this.name = void 0;\n    this.handlerName = void 0;\n    this.name = name;\n    this.handlerName = handlerName;\n  }\n}\nexports.Token = Token;\nclass ColMetadataToken extends Token {\n  constructor(columns) {\n    super('COLMETADATA', 'onColMetadata');\n    this.columns = void 0;\n    this.columns = columns;\n  }\n}\nexports.ColMetadataToken = ColMetadataToken;\nclass DoneToken extends Token {\n  constructor(_ref) {\n    let {\n      more,\n      sqlError,\n      attention,\n      serverError,\n      rowCount,\n      curCmd\n    } = _ref;\n    super('DONE', 'onDone');\n    this.more = void 0;\n    this.sqlError = void 0;\n    this.attention = void 0;\n    this.serverError = void 0;\n    this.rowCount = void 0;\n    this.curCmd = void 0;\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n}\nexports.DoneToken = DoneToken;\nclass DoneInProcToken extends Token {\n  constructor(_ref2) {\n    let {\n      more,\n      sqlError,\n      attention,\n      serverError,\n      rowCount,\n      curCmd\n    } = _ref2;\n    super('DONEINPROC', 'onDoneInProc');\n    this.more = void 0;\n    this.sqlError = void 0;\n    this.attention = void 0;\n    this.serverError = void 0;\n    this.rowCount = void 0;\n    this.curCmd = void 0;\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n}\nexports.DoneInProcToken = DoneInProcToken;\nclass DoneProcToken extends Token {\n  constructor(_ref3) {\n    let {\n      more,\n      sqlError,\n      attention,\n      serverError,\n      rowCount,\n      curCmd\n    } = _ref3;\n    super('DONEPROC', 'onDoneProc');\n    this.more = void 0;\n    this.sqlError = void 0;\n    this.attention = void 0;\n    this.serverError = void 0;\n    this.rowCount = void 0;\n    this.curCmd = void 0;\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n}\nexports.DoneProcToken = DoneProcToken;\nclass DatabaseEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onDatabaseChange');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'DATABASE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.DatabaseEnvChangeToken = DatabaseEnvChangeToken;\nclass LanguageEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onLanguageChange');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'LANGUAGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.LanguageEnvChangeToken = LanguageEnvChangeToken;\nclass CharsetEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onCharsetChange');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'CHARSET';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.CharsetEnvChangeToken = CharsetEnvChangeToken;\nclass PacketSizeEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onPacketSizeChange');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'PACKET_SIZE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.PacketSizeEnvChangeToken = PacketSizeEnvChangeToken;\nclass BeginTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onBeginTransaction');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'BEGIN_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.BeginTransactionEnvChangeToken = BeginTransactionEnvChangeToken;\nclass CommitTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onCommitTransaction');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'COMMIT_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.CommitTransactionEnvChangeToken = CommitTransactionEnvChangeToken;\nclass RollbackTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onRollbackTransaction');\n    this.type = void 0;\n    this.oldValue = void 0;\n    this.newValue = void 0;\n    this.type = 'ROLLBACK_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.RollbackTransactionEnvChangeToken = RollbackTransactionEnvChangeToken;\nclass DatabaseMirroringPartnerEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onDatabaseMirroringPartner');\n    this.type = void 0;\n    this.oldValue = void 0;\n    this.newValue = void 0;\n    this.type = 'DATABASE_MIRRORING_PARTNER';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.DatabaseMirroringPartnerEnvChangeToken = DatabaseMirroringPartnerEnvChangeToken;\nclass ResetConnectionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onResetConnection');\n    this.type = void 0;\n    this.oldValue = void 0;\n    this.newValue = void 0;\n    this.type = 'RESET_CONNECTION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.ResetConnectionEnvChangeToken = ResetConnectionEnvChangeToken;\nclass CollationChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onSqlCollationChange');\n    this.type = void 0;\n    this.oldValue = void 0;\n    this.newValue = void 0;\n    this.type = 'SQL_COLLATION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.CollationChangeToken = CollationChangeToken;\nclass RoutingEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'onRoutingChange');\n    this.type = void 0;\n    this.newValue = void 0;\n    this.oldValue = void 0;\n    this.type = 'ROUTING_CHANGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\nexports.RoutingEnvChangeToken = RoutingEnvChangeToken;\nclass FeatureExtAckToken extends Token {\n  /** Value of UTF8_SUPPORT acknowledgement.\n   *\n   * undefined when UTF8_SUPPORT not included in token. */\n  constructor(fedAuth, utf8Support) {\n    super('FEATUREEXTACK', 'onFeatureExtAck');\n    this.fedAuth = void 0;\n    this.utf8Support = void 0;\n    this.fedAuth = fedAuth;\n    this.utf8Support = utf8Support;\n  }\n}\nexports.FeatureExtAckToken = FeatureExtAckToken;\nclass FedAuthInfoToken extends Token {\n  constructor(spn, stsurl) {\n    super('FEDAUTHINFO', 'onFedAuthInfo');\n    this.spn = void 0;\n    this.stsurl = void 0;\n    this.spn = spn;\n    this.stsurl = stsurl;\n  }\n}\nexports.FedAuthInfoToken = FedAuthInfoToken;\nclass InfoMessageToken extends Token {\n  constructor(_ref4) {\n    let {\n      number,\n      state,\n      class: clazz,\n      message,\n      serverName,\n      procName,\n      lineNumber\n    } = _ref4;\n    super('INFO', 'onInfoMessage');\n    this.number = void 0;\n    this.state = void 0;\n    this.class = void 0;\n    this.message = void 0;\n    this.serverName = void 0;\n    this.procName = void 0;\n    this.lineNumber = void 0;\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n}\nexports.InfoMessageToken = InfoMessageToken;\nclass ErrorMessageToken extends Token {\n  constructor(_ref5) {\n    let {\n      number,\n      state,\n      class: clazz,\n      message,\n      serverName,\n      procName,\n      lineNumber\n    } = _ref5;\n    super('ERROR', 'onErrorMessage');\n    this.number = void 0;\n    this.state = void 0;\n    this.class = void 0;\n    this.message = void 0;\n    this.serverName = void 0;\n    this.procName = void 0;\n    this.lineNumber = void 0;\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n}\nexports.ErrorMessageToken = ErrorMessageToken;\nclass LoginAckToken extends Token {\n  constructor(_ref6) {\n    let {\n      interface: interfaze,\n      tdsVersion,\n      progName,\n      progVersion\n    } = _ref6;\n    super('LOGINACK', 'onLoginAck');\n    this.interface = void 0;\n    this.tdsVersion = void 0;\n    this.progName = void 0;\n    this.progVersion = void 0;\n    this.interface = interfaze;\n    this.tdsVersion = tdsVersion;\n    this.progName = progName;\n    this.progVersion = progVersion;\n  }\n}\nexports.LoginAckToken = LoginAckToken;\nclass NBCRowToken extends Token {\n  constructor(columns) {\n    super('NBCROW', 'onRow');\n    this.columns = void 0;\n    this.columns = columns;\n  }\n}\nexports.NBCRowToken = NBCRowToken;\nclass OrderToken extends Token {\n  constructor(orderColumns) {\n    super('ORDER', 'onOrder');\n    this.orderColumns = void 0;\n    this.orderColumns = orderColumns;\n  }\n}\nexports.OrderToken = OrderToken;\nclass ReturnStatusToken extends Token {\n  constructor(value) {\n    super('RETURNSTATUS', 'onReturnStatus');\n    this.value = void 0;\n    this.value = value;\n  }\n}\nexports.ReturnStatusToken = ReturnStatusToken;\nclass ReturnValueToken extends Token {\n  constructor(_ref7) {\n    let {\n      paramOrdinal,\n      paramName,\n      metadata,\n      value\n    } = _ref7;\n    super('RETURNVALUE', 'onReturnValue');\n    this.paramOrdinal = void 0;\n    this.paramName = void 0;\n    this.metadata = void 0;\n    this.value = void 0;\n    this.paramOrdinal = paramOrdinal;\n    this.paramName = paramName;\n    this.metadata = metadata;\n    this.value = value;\n  }\n}\nexports.ReturnValueToken = ReturnValueToken;\nclass RowToken extends Token {\n  constructor(columns) {\n    super('ROW', 'onRow');\n    this.columns = void 0;\n    this.columns = columns;\n  }\n}\nexports.RowToken = RowToken;\nclass SSPIToken extends Token {\n  constructor(ntlmpacket, ntlmpacketBuffer) {\n    super('SSPICHALLENGE', 'onSSPI');\n    this.ntlmpacket = void 0;\n    this.ntlmpacketBuffer = void 0;\n    this.ntlmpacket = ntlmpacket;\n    this.ntlmpacketBuffer = ntlmpacketBuffer;\n  }\n}\nexports.SSPIToken = SSPIToken;","map":{"version":3,"names":["TYPE","ALTMETADATA","ALTROW","COLMETADATA","COLINFO","DONE","DONEPROC","DONEINPROC","ENVCHANGE","ERROR","FEATUREEXTACK","FEDAUTHINFO","INFO","LOGINACK","NBCROW","OFFSET","ORDER","RETURNSTATUS","RETURNVALUE","ROW","SSPI","TABNAME","Token","constructor","name","handlerName","ColMetadataToken","columns","DoneToken","_ref","more","sqlError","attention","serverError","rowCount","curCmd","DoneInProcToken","_ref2","DoneProcToken","_ref3","DatabaseEnvChangeToken","newValue","oldValue","type","LanguageEnvChangeToken","CharsetEnvChangeToken","PacketSizeEnvChangeToken","BeginTransactionEnvChangeToken","CommitTransactionEnvChangeToken","RollbackTransactionEnvChangeToken","DatabaseMirroringPartnerEnvChangeToken","ResetConnectionEnvChangeToken","CollationChangeToken","RoutingEnvChangeToken","FeatureExtAckToken","fedAuth","utf8Support","FedAuthInfoToken","spn","stsurl","InfoMessageToken","_ref4","number","state","class","clazz","message","serverName","procName","lineNumber","ErrorMessageToken","_ref5","LoginAckToken","_ref6","interface","interfaze","tdsVersion","progName","progVersion","NBCRowToken","OrderToken","orderColumns","ReturnStatusToken","value","ReturnValueToken","_ref7","paramOrdinal","paramName","metadata","RowToken","SSPIToken","ntlmpacket","ntlmpacketBuffer"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/token/token.ts"],"sourcesContent":["import { Collation } from '../collation';\nimport { Metadata } from '../metadata-parser';\nimport { ColumnMetadata } from './colmetadata-token-parser';\nimport { TokenHandler } from './handler';\n\nexport const TYPE = {\n  ALTMETADATA: 0x88,\n  ALTROW: 0xD3,\n  COLMETADATA: 0x81,\n  COLINFO: 0xA5,\n  DONE: 0xFD,\n  DONEPROC: 0xFE,\n  DONEINPROC: 0xFF,\n  ENVCHANGE: 0xE3,\n  ERROR: 0xAA,\n  FEATUREEXTACK: 0xAE,\n  FEDAUTHINFO: 0xEE,\n  INFO: 0xAB,\n  LOGINACK: 0xAD,\n  NBCROW: 0xD2,\n  OFFSET: 0x78,\n  ORDER: 0xA9,\n  RETURNSTATUS: 0x79,\n  RETURNVALUE: 0xAC,\n  ROW: 0xD1,\n  SSPI: 0xED,\n  TABNAME: 0xA4\n};\n\ntype HandlerName = keyof TokenHandler;\n\nexport abstract class Token {\n  name: string;\n  handlerName: keyof TokenHandler;\n\n  constructor(name: string, handlerName: HandlerName) {\n    this.name = name;\n    this.handlerName = handlerName;\n  }\n}\n\nexport class ColMetadataToken extends Token {\n  declare name: 'COLMETADATA';\n  declare handlerName: 'onColMetadata';\n\n  columns: ColumnMetadata[]\n\n  constructor(columns: ColumnMetadata[]) {\n    super('COLMETADATA', 'onColMetadata');\n\n    this.columns = columns;\n  }\n}\n\nexport class DoneToken extends Token {\n  declare name: 'DONE';\n  declare handlerName: 'onDone';\n\n  more: boolean;\n  sqlError: boolean;\n  attention: boolean;\n  serverError: boolean;\n  rowCount: number | undefined;\n  curCmd: number;\n\n  constructor({ more, sqlError, attention, serverError, rowCount, curCmd }: { more: boolean, sqlError: boolean, attention: boolean, serverError: boolean, rowCount: number | undefined, curCmd: number }) {\n    super('DONE', 'onDone');\n\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n}\n\nexport class DoneInProcToken extends Token {\n  declare name: 'DONEINPROC';\n  declare handlerName: 'onDoneInProc';\n\n  more: boolean;\n  sqlError: boolean;\n  attention: boolean;\n  serverError: boolean;\n  rowCount: number | undefined;\n  curCmd: number;\n\n  constructor({ more, sqlError, attention, serverError, rowCount, curCmd }: { more: boolean, sqlError: boolean, attention: boolean, serverError: boolean, rowCount: number | undefined, curCmd: number }) {\n    super('DONEINPROC', 'onDoneInProc');\n\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n}\n\nexport class DoneProcToken extends Token {\n  declare name: 'DONEPROC';\n  declare handlerName: 'onDoneProc';\n\n  more: boolean;\n  sqlError: boolean;\n  attention: boolean;\n  serverError: boolean;\n  rowCount: number | undefined;\n  curCmd: number;\n\n  constructor({ more, sqlError, attention, serverError, rowCount, curCmd }: { more: boolean, sqlError: boolean, attention: boolean, serverError: boolean, rowCount: number | undefined, curCmd: number }) {\n    super('DONEPROC', 'onDoneProc');\n\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n}\n\nexport class DatabaseEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onDatabaseChange';\n\n  type: 'DATABASE';\n  newValue: string;\n  oldValue: string;\n\n  constructor(newValue: string, oldValue: string) {\n    super('ENVCHANGE', 'onDatabaseChange');\n\n    this.type = 'DATABASE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class LanguageEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onLanguageChange';\n\n  type: 'LANGUAGE';\n  newValue: string;\n  oldValue: string;\n\n  constructor(newValue: string, oldValue: string) {\n    super('ENVCHANGE', 'onLanguageChange');\n\n    this.type = 'LANGUAGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class CharsetEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onCharsetChange';\n\n  type: 'CHARSET';\n  newValue: string;\n  oldValue: string;\n\n  constructor(newValue: string, oldValue: string) {\n    super('ENVCHANGE', 'onCharsetChange');\n\n    this.type = 'CHARSET';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class PacketSizeEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onPacketSizeChange';\n\n  type: 'PACKET_SIZE';\n  newValue: number;\n  oldValue: number;\n\n  constructor(newValue: number, oldValue: number) {\n    super('ENVCHANGE', 'onPacketSizeChange');\n\n    this.type = 'PACKET_SIZE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class BeginTransactionEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onBeginTransaction';\n\n  type: 'BEGIN_TXN';\n  newValue: Buffer;\n  oldValue: Buffer;\n\n  constructor(newValue: Buffer, oldValue: Buffer) {\n    super('ENVCHANGE', 'onBeginTransaction');\n\n    this.type = 'BEGIN_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class CommitTransactionEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onCommitTransaction';\n\n  type: 'COMMIT_TXN';\n  newValue: Buffer;\n  oldValue: Buffer;\n\n  constructor(newValue: Buffer, oldValue: Buffer) {\n    super('ENVCHANGE', 'onCommitTransaction');\n\n    this.type = 'COMMIT_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class RollbackTransactionEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onRollbackTransaction';\n\n  type: 'ROLLBACK_TXN';\n  oldValue: Buffer;\n  newValue: Buffer;\n\n  constructor(newValue: Buffer, oldValue: Buffer) {\n    super('ENVCHANGE', 'onRollbackTransaction');\n\n    this.type = 'ROLLBACK_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class DatabaseMirroringPartnerEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onDatabaseMirroringPartner';\n\n  type: 'DATABASE_MIRRORING_PARTNER';\n  oldValue: string;\n  newValue: string;\n\n  constructor(newValue: string, oldValue: string) {\n    super('ENVCHANGE', 'onDatabaseMirroringPartner');\n\n    this.type = 'DATABASE_MIRRORING_PARTNER';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class ResetConnectionEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onResetConnection';\n\n  type: 'RESET_CONNECTION';\n  oldValue: Buffer;\n  newValue: Buffer;\n\n  constructor(newValue: Buffer, oldValue: Buffer) {\n    super('ENVCHANGE', 'onResetConnection');\n\n    this.type = 'RESET_CONNECTION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class CollationChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onSqlCollationChange';\n\n  type: 'SQL_COLLATION';\n  oldValue: Collation | undefined;\n  newValue: Collation | undefined;\n\n  constructor(newValue: Collation | undefined, oldValue: Collation | undefined) {\n    super('ENVCHANGE', 'onSqlCollationChange');\n\n    this.type = 'SQL_COLLATION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class RoutingEnvChangeToken extends Token {\n  declare name: 'ENVCHANGE';\n  declare handlerName: 'onRoutingChange';\n\n  type: 'ROUTING_CHANGE';\n  newValue: { protocol: number, port: number, server: string };\n  oldValue: Buffer;\n\n  constructor(newValue: { protocol: number, port: number, server: string }, oldValue: Buffer) {\n    super('ENVCHANGE', 'onRoutingChange');\n\n    this.type = 'ROUTING_CHANGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n}\n\nexport class FeatureExtAckToken extends Token {\n  declare name: 'FEATUREEXTACK';\n  declare handlerName: 'onFeatureExtAck';\n\n  fedAuth: Buffer | undefined;\n\n  /** Value of UTF8_SUPPORT acknowledgement.\n   *\n   * undefined when UTF8_SUPPORT not included in token. */\n  utf8Support: boolean | undefined;\n\n  constructor(fedAuth: Buffer | undefined, utf8Support: boolean | undefined) {\n    super('FEATUREEXTACK', 'onFeatureExtAck');\n\n    this.fedAuth = fedAuth;\n    this.utf8Support = utf8Support;\n  }\n}\n\nexport class FedAuthInfoToken extends Token {\n  declare name: 'FEDAUTHINFO';\n  declare handlerName: 'onFedAuthInfo';\n\n  spn: string | undefined;\n  stsurl: string | undefined;\n\n  constructor(spn: string | undefined, stsurl: string | undefined) {\n    super('FEDAUTHINFO', 'onFedAuthInfo');\n\n    this.spn = spn;\n    this.stsurl = stsurl;\n  }\n}\n\nexport class InfoMessageToken extends Token {\n  declare name: 'INFO';\n  declare handlerName: 'onInfoMessage';\n\n  number: number;\n  state: number;\n  class: number;\n  message: string;\n  serverName: string;\n  procName: string;\n  lineNumber: number;\n\n  constructor({ number, state, class: clazz, message, serverName, procName, lineNumber }: { number: number, state: number, class: number, message: string, serverName: string, procName: string, lineNumber: number }) {\n    super('INFO', 'onInfoMessage');\n\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n}\n\nexport class ErrorMessageToken extends Token {\n  declare name: 'ERROR';\n  declare handlerName: 'onErrorMessage';\n\n  number: number;\n  state: number;\n  class: number;\n  message: string;\n  serverName: string;\n  procName: string;\n  lineNumber: number;\n\n  constructor({ number, state, class: clazz, message, serverName, procName, lineNumber }: { number: number, state: number, class: number, message: string, serverName: string, procName: string, lineNumber: number }) {\n    super('ERROR', 'onErrorMessage');\n\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n}\n\nexport class LoginAckToken extends Token {\n  declare name: 'LOGINACK';\n  declare handlerName: 'onLoginAck';\n\n  interface: string;\n  tdsVersion: string;\n  progName: string;\n  progVersion: { major: number, minor: number, buildNumHi: number, buildNumLow: number };\n\n  constructor({ interface: interfaze, tdsVersion, progName, progVersion }: { interface: LoginAckToken['interface'], tdsVersion: LoginAckToken['tdsVersion'], progName: LoginAckToken['progName'], progVersion: LoginAckToken['progVersion'] }) {\n    super('LOGINACK', 'onLoginAck');\n\n    this.interface = interfaze;\n    this.tdsVersion = tdsVersion;\n    this.progName = progName;\n    this.progVersion = progVersion;\n  }\n}\n\nexport class NBCRowToken extends Token {\n  declare name: 'NBCROW';\n  declare handlerName: 'onRow';\n\n  columns: any;\n\n  constructor(columns: any) {\n    super('NBCROW', 'onRow');\n\n    this.columns = columns;\n  }\n}\n\nexport class OrderToken extends Token {\n  declare name: 'ORDER';\n  declare handlerName: 'onOrder';\n\n  orderColumns: number[];\n\n  constructor(orderColumns: number[]) {\n    super('ORDER', 'onOrder');\n\n    this.orderColumns = orderColumns;\n  }\n}\n\nexport class ReturnStatusToken extends Token {\n  declare name: 'RETURNSTATUS';\n  declare handlerName: 'onReturnStatus';\n\n  value: number;\n\n  constructor(value: number) {\n    super('RETURNSTATUS', 'onReturnStatus');\n\n    this.value = value;\n  }\n}\n\nexport class ReturnValueToken extends Token {\n  declare name: 'RETURNVALUE';\n  declare handlerName: 'onReturnValue';\n\n  paramOrdinal: number;\n  paramName: string;\n  metadata: Metadata;\n  value: unknown;\n\n  constructor({ paramOrdinal, paramName, metadata, value }: { paramOrdinal: number, paramName: string, metadata: Metadata, value: unknown }) {\n    super('RETURNVALUE', 'onReturnValue');\n\n    this.paramOrdinal = paramOrdinal;\n    this.paramName = paramName;\n    this.metadata = metadata;\n    this.value = value;\n  }\n}\n\nexport class RowToken extends Token {\n  declare name: 'ROW';\n  declare handlerName: 'onRow';\n\n  columns: any;\n\n  constructor(columns: any) {\n    super('ROW', 'onRow');\n\n    this.columns = columns;\n  }\n}\n\nexport class SSPIToken extends Token {\n  declare name: 'SSPICHALLENGE';\n  declare handlerName: 'onSSPI';\n\n  ntlmpacket: any;\n  ntlmpacketBuffer: Buffer;\n\n  constructor(ntlmpacket: any, ntlmpacketBuffer: Buffer) {\n    super('SSPICHALLENGE', 'onSSPI');\n\n    this.ntlmpacket = ntlmpacket;\n    this.ntlmpacketBuffer = ntlmpacketBuffer;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}