{"ast":null,"code":"'use strict';\n\nconst MSSQLError = require('./mssql-error');\n\n/**\n * Class RequestError.\n *\n * @property {String} number Error number.\n * @property {Number} lineNumber Line number.\n * @property {String} state Error state.\n * @property {String} class Error class.\n * @property {String} serverName Server name.\n * @property {String} procName Procedure name.\n */\n\nclass RequestError extends MSSQLError {\n  /**\n   * Creates a new RequestError.\n   *\n   * @param {String} message Error message.\n   * @param {String} [code] Error code.\n   */\n\n  constructor(message, code) {\n    super(message, code);\n    if (message instanceof Error) {\n      if (message.info) {\n        this.number = message.info.number || message.code; // err.code is returned by msnodesql driver\n        this.lineNumber = message.info.lineNumber;\n        this.state = message.info.state || message.sqlstate; // err.sqlstate is returned by msnodesql driver\n        this.class = message.info.class;\n        this.serverName = message.info.serverName;\n        this.procName = message.info.procName;\n      } else {\n        // Use err attributes returned by msnodesql driver\n        this.number = message.code;\n        this.lineNumber = message.lineNumber;\n        this.state = message.sqlstate;\n        this.class = message.severity;\n        this.serverName = message.serverName;\n        this.procName = message.procName;\n      }\n    }\n    this.name = 'RequestError';\n    if (/^\\[Microsoft\\]\\[SQL Server Native Client 11\\.0\\](?:\\[SQL Server\\])?([\\s\\S]*)$/.exec(this.message)) {\n      this.message = RegExp.$1;\n    }\n  }\n}\nmodule.exports = RequestError;","map":{"version":3,"names":["MSSQLError","require","RequestError","constructor","message","code","Error","info","number","lineNumber","state","sqlstate","class","serverName","procName","severity","name","exec","RegExp","$1","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/mssql/lib/error/request-error.js"],"sourcesContent":["'use strict'\n\nconst MSSQLError = require('./mssql-error')\n\n/**\n * Class RequestError.\n *\n * @property {String} number Error number.\n * @property {Number} lineNumber Line number.\n * @property {String} state Error state.\n * @property {String} class Error class.\n * @property {String} serverName Server name.\n * @property {String} procName Procedure name.\n */\n\nclass RequestError extends MSSQLError {\n  /**\n   * Creates a new RequestError.\n   *\n   * @param {String} message Error message.\n   * @param {String} [code] Error code.\n   */\n\n  constructor (message, code) {\n    super(message, code)\n    if (message instanceof Error) {\n      if (message.info) {\n        this.number = message.info.number || message.code // err.code is returned by msnodesql driver\n        this.lineNumber = message.info.lineNumber\n        this.state = message.info.state || message.sqlstate // err.sqlstate is returned by msnodesql driver\n        this.class = message.info.class\n        this.serverName = message.info.serverName\n        this.procName = message.info.procName\n      } else {\n        // Use err attributes returned by msnodesql driver\n        this.number = message.code\n        this.lineNumber = message.lineNumber\n        this.state = message.sqlstate\n        this.class = message.severity\n        this.serverName = message.serverName\n        this.procName = message.procName\n      }\n    }\n\n    this.name = 'RequestError'\n    if ((/^\\[Microsoft\\]\\[SQL Server Native Client 11\\.0\\](?:\\[SQL Server\\])?([\\s\\S]*)$/).exec(this.message)) {\n      this.message = RegExp.$1\n    }\n  }\n}\n\nmodule.exports = RequestError\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,SAASF,UAAU,CAAC;EACpC;AACF;AACA;AACA;AACA;AACA;;EAEEG,WAAWA,CAAEC,OAAO,EAAEC,IAAI,EAAE;IAC1B,KAAK,CAACD,OAAO,EAAEC,IAAI,CAAC;IACpB,IAAID,OAAO,YAAYE,KAAK,EAAE;MAC5B,IAAIF,OAAO,CAACG,IAAI,EAAE;QAChB,IAAI,CAACC,MAAM,GAAGJ,OAAO,CAACG,IAAI,CAACC,MAAM,IAAIJ,OAAO,CAACC,IAAI,EAAC;QAClD,IAAI,CAACI,UAAU,GAAGL,OAAO,CAACG,IAAI,CAACE,UAAU;QACzC,IAAI,CAACC,KAAK,GAAGN,OAAO,CAACG,IAAI,CAACG,KAAK,IAAIN,OAAO,CAACO,QAAQ,EAAC;QACpD,IAAI,CAACC,KAAK,GAAGR,OAAO,CAACG,IAAI,CAACK,KAAK;QAC/B,IAAI,CAACC,UAAU,GAAGT,OAAO,CAACG,IAAI,CAACM,UAAU;QACzC,IAAI,CAACC,QAAQ,GAAGV,OAAO,CAACG,IAAI,CAACO,QAAQ;MACvC,CAAC,MAAM;QACL;QACA,IAAI,CAACN,MAAM,GAAGJ,OAAO,CAACC,IAAI;QAC1B,IAAI,CAACI,UAAU,GAAGL,OAAO,CAACK,UAAU;QACpC,IAAI,CAACC,KAAK,GAAGN,OAAO,CAACO,QAAQ;QAC7B,IAAI,CAACC,KAAK,GAAGR,OAAO,CAACW,QAAQ;QAC7B,IAAI,CAACF,UAAU,GAAGT,OAAO,CAACS,UAAU;QACpC,IAAI,CAACC,QAAQ,GAAGV,OAAO,CAACU,QAAQ;MAClC;IACF;IAEA,IAAI,CAACE,IAAI,GAAG,cAAc;IAC1B,IAAK,+EAA+E,CAAEC,IAAI,CAAC,IAAI,CAACb,OAAO,CAAC,EAAE;MACxG,IAAI,CAACA,OAAO,GAAGc,MAAM,CAACC,EAAE;IAC1B;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGnB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}