{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _floatn = _interopRequireDefault(require(\"./floatn\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst Float = {\n  id: 0x3E,\n  type: 'FLT8',\n  name: 'Float',\n  declaration: function () {\n    return 'float';\n  },\n  generateTypeInfo() {\n    return Buffer.from([_floatn.default.id, 0x08]);\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return Buffer.from([0x08]);\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    const buffer = Buffer.alloc(8);\n    buffer.writeDoubleLE(parseFloat(parameter.value), 0);\n    yield buffer;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    value = parseFloat(value);\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n    return value;\n  }\n};\nvar _default = Float;\nexports.default = _default;\nmodule.exports = Float;","map":{"version":3,"names":["_floatn","_interopRequireDefault","require","NULL_LENGTH","Buffer","from","Float","id","type","name","declaration","generateTypeInfo","default","generateParameterLength","parameter","options","value","generateParameterData","buffer","alloc","writeDoubleLE","parseFloat","validate","isNaN","TypeError","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/data-types/float.ts"],"sourcesContent":["import { DataType } from '../data-type';\nimport FloatN from './floatn';\n\nconst NULL_LENGTH = Buffer.from([0x00]);\n\nconst Float: DataType = {\n  id: 0x3E,\n  type: 'FLT8',\n  name: 'Float',\n\n  declaration: function() {\n    return 'float';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([FloatN.id, 0x08]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return Buffer.from([0x08]);\n  },\n\n  * generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = Buffer.alloc(8);\n    buffer.writeDoubleLE(parseFloat(parameter.value), 0);\n    yield buffer;\n  },\n\n  validate: function(value): number | null {\n    if (value == null) {\n      return null;\n    }\n    value = parseFloat(value);\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n    return value;\n  }\n};\n\nexport default Float;\nmodule.exports = Float;\n"],"mappings":";;;;;;AACA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;;;;;;AAEA,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AAEA,MAAMC,KAAe,GAAG;EACtBC,EAAE,EAAE,IADkB;EAEtBC,IAAI,EAAE,MAFgB;EAGtBC,IAAI,EAAE,OAHgB;EAKtBC,WAAW,EAAE,SAAAA,CAAA,EAAW;IACtB,OAAO,OAAP;EACD,CAPqB;EAStBC,gBAAgBA,CAAA,EAAG;IACjB,OAAOP,MAAM,CAACC,IAAP,CAAY,CAACL,OAAA,CAAAY,OAAA,CAAOL,EAAR,EAAY,IAAZ,CAAZ,CAAP;EACD,CAXqB;EAatBM,uBAAuBA,CAACC,SAAD,EAAYC,OAAZ,EAAqB;IAC1C,IAAID,SAAS,CAACE,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,OAAOb,WAAP;IACD;IAED,OAAOC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAP;EACD,CAnBqB;EAqBtB,CAAEY,qBAAFA,CAAwBH,SAAxB,EAAmCC,OAAnC,EAA4C;IAC1C,IAAID,SAAS,CAACE,KAAV,IAAmB,IAAvB,EAA6B;MAC3B;IACD;IAED,MAAME,MAAM,GAAGd,MAAM,CAACe,KAAP,CAAa,CAAb,CAAf;IACAD,MAAM,CAACE,aAAP,CAAqBC,UAAU,CAACP,SAAS,CAACE,KAAX,CAA/B,EAAkD,CAAlD;IACA,MAAME,MAAN;EACD,CA7BqB;EA+BtBI,QAAQ,EAAE,SAAAA,CAASN,KAAT,EAA+B;IACvC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;IACDA,KAAK,GAAGK,UAAU,CAACL,KAAD,CAAlB;IACA,IAAIO,KAAK,CAACP,KAAD,CAAT,EAAkB;MAChB,MAAM,IAAIQ,SAAJ,CAAc,iBAAd,CAAN;IACD;IACD,OAAOR,KAAP;EACD;AAxCqB,CAAxB;eA2CeV,K;;AACfmB,MAAM,CAACC,OAAP,GAAiBpB,KAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}