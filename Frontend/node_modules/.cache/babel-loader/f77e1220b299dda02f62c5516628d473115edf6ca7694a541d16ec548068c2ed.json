{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _token = require(\"./token\");\nvar _tdsVersions = require(\"../tds-versions\");\nconst interfaceTypes = {\n  0: 'SQL_DFLT',\n  1: 'SQL_TSQL'\n};\nfunction loginAckParser(parser, _options, callback) {\n  // length\n  parser.readUInt16LE(() => {\n    parser.readUInt8(interfaceNumber => {\n      const interfaceType = interfaceTypes[interfaceNumber];\n      parser.readUInt32BE(tdsVersionNumber => {\n        const tdsVersion = _tdsVersions.versionsByValue[tdsVersionNumber];\n        parser.readBVarChar(progName => {\n          parser.readUInt8(major => {\n            parser.readUInt8(minor => {\n              parser.readUInt8(buildNumHi => {\n                parser.readUInt8(buildNumLow => {\n                  callback(new _token.LoginAckToken({\n                    interface: interfaceType,\n                    tdsVersion: tdsVersion,\n                    progName: progName,\n                    progVersion: {\n                      major: major,\n                      minor: minor,\n                      buildNumHi: buildNumHi,\n                      buildNumLow: buildNumLow\n                    }\n                  }));\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\nvar _default = loginAckParser;\nexports.default = _default;\nmodule.exports = loginAckParser;","map":{"version":3,"names":["_token","require","_tdsVersions","interfaceTypes","loginAckParser","parser","_options","callback","readUInt16LE","readUInt8","interfaceNumber","interfaceType","readUInt32BE","tdsVersionNumber","tdsVersion","versionsByValue","readBVarChar","progName","major","minor","buildNumHi","buildNumLow","LoginAckToken","interface","progVersion","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/token/loginack-token-parser.ts"],"sourcesContent":["import Parser, { ParserOptions } from './stream-parser';\n\nimport { LoginAckToken } from './token';\n\nimport { versionsByValue as versions } from '../tds-versions';\n\nconst interfaceTypes: { [key: number]: string } = {\n  0: 'SQL_DFLT',\n  1: 'SQL_TSQL'\n};\n\nfunction loginAckParser(parser: Parser, _options: ParserOptions, callback: (token: LoginAckToken) => void) {\n  // length\n  parser.readUInt16LE(() => {\n    parser.readUInt8((interfaceNumber) => {\n      const interfaceType = interfaceTypes[interfaceNumber];\n      parser.readUInt32BE((tdsVersionNumber) => {\n        const tdsVersion = versions[tdsVersionNumber];\n        parser.readBVarChar((progName) => {\n          parser.readUInt8((major) => {\n            parser.readUInt8((minor) => {\n              parser.readUInt8((buildNumHi) => {\n                parser.readUInt8((buildNumLow) => {\n                  callback(new LoginAckToken({\n                    interface: interfaceType,\n                    tdsVersion: tdsVersion,\n                    progName: progName,\n                    progVersion: {\n                      major: major,\n                      minor: minor,\n                      buildNumHi: buildNumHi,\n                      buildNumLow: buildNumLow\n                    }\n                  }));\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nexport default loginAckParser;\nmodule.exports = loginAckParser;\n"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAD,OAAA;AAEA,MAAME,cAAyC,GAAG;EAChD,GAAG,UAD6C;EAEhD,GAAG;AAF6C,CAAlD;AAKA,SAASC,cAATA,CAAwBC,MAAxB,EAAwCC,QAAxC,EAAiEC,QAAjE,EAA2G;EACzG;EACAF,MAAM,CAACG,YAAP,CAAoB,MAAM;IACxBH,MAAM,CAACI,SAAP,CAAkBC,eAAD,IAAqB;MACpC,MAAMC,aAAa,GAAGR,cAAc,CAACO,eAAD,CAApC;MACAL,MAAM,CAACO,YAAP,CAAqBC,gBAAD,IAAsB;QACxC,MAAMC,UAAU,GAAGZ,YAAA,CAAAa,eAAA,CAASF,gBAAT,CAAnB;QACAR,MAAM,CAACW,YAAP,CAAqBC,QAAD,IAAc;UAChCZ,MAAM,CAACI,SAAP,CAAkBS,KAAD,IAAW;YAC1Bb,MAAM,CAACI,SAAP,CAAkBU,KAAD,IAAW;cAC1Bd,MAAM,CAACI,SAAP,CAAkBW,UAAD,IAAgB;gBAC/Bf,MAAM,CAACI,SAAP,CAAkBY,WAAD,IAAiB;kBAChCd,QAAQ,CAAC,IAAIP,MAAA,CAAAsB,aAAJ,CAAkB;oBACzBC,SAAS,EAAEZ,aADc;oBAEzBG,UAAU,EAAEA,UAFa;oBAGzBG,QAAQ,EAAEA,QAHe;oBAIzBO,WAAW,EAAE;sBACXN,KAAK,EAAEA,KADI;sBAEXC,KAAK,EAAEA,KAFI;sBAGXC,UAAU,EAAEA,UAHD;sBAIXC,WAAW,EAAEA;oBAJF;kBAJY,CAAlB,CAAD,CAAR;gBAWD,CAZD;cAaD,CAdD;YAeD,CAhBD;UAiBD,CAlBD;QAmBD,CApBD;MAqBD,CAvBD;IAwBD,CA1BD;EA2BD,CA5BD;AA6BD;eAEcjB,c;;AACfqB,MAAM,CAACC,OAAP,GAAiBtB,cAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}