{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sprintfJs = require(\"sprintf-js\");\nvar _tdsVersions = require(\"./tds-versions\");\nconst FLAGS_1 = {\n  ENDIAN_LITTLE: 0x00,\n  ENDIAN_BIG: 0x01,\n  CHARSET_ASCII: 0x00,\n  CHARSET_EBCDIC: 0x02,\n  FLOAT_IEEE_754: 0x00,\n  FLOAT_VAX: 0x04,\n  FLOAT_ND5000: 0x08,\n  BCP_DUMPLOAD_ON: 0x00,\n  BCP_DUMPLOAD_OFF: 0x10,\n  USE_DB_ON: 0x00,\n  USE_DB_OFF: 0x20,\n  INIT_DB_WARN: 0x00,\n  INIT_DB_FATAL: 0x40,\n  SET_LANG_WARN_OFF: 0x00,\n  SET_LANG_WARN_ON: 0x80\n};\nconst FLAGS_2 = {\n  INIT_LANG_WARN: 0x00,\n  INIT_LANG_FATAL: 0x01,\n  ODBC_OFF: 0x00,\n  ODBC_ON: 0x02,\n  F_TRAN_BOUNDARY: 0x04,\n  F_CACHE_CONNECT: 0x08,\n  USER_NORMAL: 0x00,\n  USER_SERVER: 0x10,\n  USER_REMUSER: 0x20,\n  USER_SQLREPL: 0x40,\n  INTEGRATED_SECURITY_OFF: 0x00,\n  INTEGRATED_SECURITY_ON: 0x80\n};\nconst TYPE_FLAGS = {\n  SQL_DFLT: 0x00,\n  SQL_TSQL: 0x08,\n  OLEDB_OFF: 0x00,\n  OLEDB_ON: 0x10,\n  READ_WRITE_INTENT: 0x00,\n  READ_ONLY_INTENT: 0x20\n};\nconst FLAGS_3 = {\n  CHANGE_PASSWORD_NO: 0x00,\n  CHANGE_PASSWORD_YES: 0x01,\n  BINARY_XML: 0x02,\n  SPAWN_USER_INSTANCE: 0x04,\n  UNKNOWN_COLLATION_HANDLING: 0x08,\n  EXTENSION_USED: 0x10\n};\nconst FEDAUTH_OPTIONS = {\n  FEATURE_ID: 0x02,\n  LIBRARY_SECURITYTOKEN: 0x01,\n  LIBRARY_ADAL: 0x02,\n  FEDAUTH_YES_ECHO: 0x01,\n  FEDAUTH_NO_ECHO: 0x00,\n  ADAL_WORKFLOW_USER_PASS: 0x01,\n  ADAL_WORKFLOW_INTEGRATED: 0x02\n};\nconst FEATURE_EXT_TERMINATOR = 0xFF;\n\n/*\n  s2.2.6.3\n */\nclass Login7Payload {\n  constructor(_ref) {\n    let {\n      tdsVersion,\n      packetSize,\n      clientProgVer,\n      clientPid,\n      connectionId,\n      clientTimeZone,\n      clientLcid\n    } = _ref;\n    this.tdsVersion = void 0;\n    this.packetSize = void 0;\n    this.clientProgVer = void 0;\n    this.clientPid = void 0;\n    this.connectionId = void 0;\n    this.clientTimeZone = void 0;\n    this.clientLcid = void 0;\n    this.readOnlyIntent = void 0;\n    this.initDbFatal = void 0;\n    this.userName = void 0;\n    this.password = void 0;\n    this.serverName = void 0;\n    this.appName = void 0;\n    this.hostname = void 0;\n    this.libraryName = void 0;\n    this.language = void 0;\n    this.database = void 0;\n    this.clientId = void 0;\n    this.sspi = void 0;\n    this.attachDbFile = void 0;\n    this.changePassword = void 0;\n    this.fedAuth = void 0;\n    this.tdsVersion = tdsVersion;\n    this.packetSize = packetSize;\n    this.clientProgVer = clientProgVer;\n    this.clientPid = clientPid;\n    this.connectionId = connectionId;\n    this.clientTimeZone = clientTimeZone;\n    this.clientLcid = clientLcid;\n    this.readOnlyIntent = false;\n    this.initDbFatal = false;\n    this.fedAuth = undefined;\n    this.userName = undefined;\n    this.password = undefined;\n    this.serverName = undefined;\n    this.appName = undefined;\n    this.hostname = undefined;\n    this.libraryName = undefined;\n    this.language = undefined;\n    this.database = undefined;\n    this.clientId = undefined;\n    this.sspi = undefined;\n    this.attachDbFile = undefined;\n    this.changePassword = undefined;\n  }\n  toBuffer() {\n    const fixedData = Buffer.alloc(94);\n    const buffers = [fixedData];\n    let offset = 0;\n    let dataOffset = fixedData.length; // Length: 4-byte\n\n    offset = fixedData.writeUInt32LE(0, offset); // TDSVersion: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.tdsVersion, offset); // PacketSize: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.packetSize, offset); // ClientProgVer: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientProgVer, offset); // ClientPID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientPid, offset); // ConnectionID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.connectionId, offset); // OptionFlags1: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags1(), offset); // OptionFlags2: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags2(), offset); // TypeFlags: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildTypeFlags(), offset); // OptionFlags3: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags3(), offset); // ClientTimZone: 4-byte\n\n    offset = fixedData.writeInt32LE(this.clientTimeZone, offset); // ClientLCID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientLcid, offset); // ibHostName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchHostName: 2-byte\n\n    if (this.hostname) {\n      const buffer = Buffer.from(this.hostname, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(dataOffset, offset);\n    } // ibUserName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchUserName: 2-byte\n\n    if (this.userName) {\n      const buffer = Buffer.from(this.userName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibPassword: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchPassword: 2-byte\n\n    if (this.password) {\n      const buffer = Buffer.from(this.password, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(this.scramblePassword(buffer));\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibAppName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchAppName: 2-byte\n\n    if (this.appName) {\n      const buffer = Buffer.from(this.appName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibServerName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchServerName: 2-byte\n\n    if (this.serverName) {\n      const buffer = Buffer.from(this.serverName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // (ibUnused / ibExtension): 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // (cchUnused / cbExtension): 2-byte\n\n    const extensions = this.buildFeatureExt();\n    offset = fixedData.writeUInt16LE(4, offset);\n    const extensionOffset = Buffer.alloc(4);\n    extensionOffset.writeUInt32LE(dataOffset += 4, 0);\n    dataOffset += extensions.length;\n    buffers.push(extensionOffset, extensions); // ibCltIntName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchCltIntName: 2-byte\n\n    if (this.libraryName) {\n      const buffer = Buffer.from(this.libraryName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibLanguage: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchLanguage: 2-byte\n\n    if (this.language) {\n      const buffer = Buffer.from(this.language, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibDatabase: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchDatabase: 2-byte\n\n    if (this.database) {\n      const buffer = Buffer.from(this.database, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ClientID: 6-byte\n\n    if (this.clientId) {\n      this.clientId.copy(fixedData, offset, 0, 6);\n    }\n    offset += 6; // ibSSPI: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cbSSPI: 2-byte\n\n    if (this.sspi) {\n      if (this.sspi.length > 65535) {\n        offset = fixedData.writeUInt16LE(65535, offset);\n      } else {\n        offset = fixedData.writeUInt16LE(this.sspi.length, offset);\n      }\n      buffers.push(this.sspi);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibAtchDBFile: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchAtchDBFile: 2-byte\n\n    if (this.attachDbFile) {\n      const buffer = Buffer.from(this.attachDbFile, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibChangePassword: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchChangePassword: 2-byte\n\n    if (this.changePassword) {\n      const buffer = Buffer.from(this.changePassword, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // cbSSPILong: 4-byte\n\n    if (this.sspi && this.sspi.length > 65535) {\n      fixedData.writeUInt32LE(this.sspi.length, offset);\n    } else {\n      fixedData.writeUInt32LE(0, offset);\n    }\n    const data = Buffer.concat(buffers);\n    data.writeUInt32LE(data.length, 0);\n    return data;\n  }\n  buildOptionFlags1() {\n    let flags1 = FLAGS_1.ENDIAN_LITTLE | FLAGS_1.CHARSET_ASCII | FLAGS_1.FLOAT_IEEE_754 | FLAGS_1.BCP_DUMPLOAD_OFF | FLAGS_1.USE_DB_OFF | FLAGS_1.SET_LANG_WARN_ON;\n    if (this.initDbFatal) {\n      flags1 |= FLAGS_1.INIT_DB_FATAL;\n    } else {\n      flags1 |= FLAGS_1.INIT_DB_WARN;\n    }\n    return flags1;\n  }\n  buildFeatureExt() {\n    const buffers = [];\n    const fedAuth = this.fedAuth;\n    if (fedAuth) {\n      switch (fedAuth.type) {\n        case 'ADAL':\n          const buffer = Buffer.alloc(7);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, 0);\n          buffer.writeUInt32LE(2, 1);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.LIBRARY_ADAL << 1 | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), 5);\n          buffer.writeUInt8(fedAuth.workflow === 'integrated' ? 0x02 : FEDAUTH_OPTIONS.ADAL_WORKFLOW_USER_PASS, 6);\n          buffers.push(buffer);\n          break;\n        case 'SECURITYTOKEN':\n          const token = Buffer.from(fedAuth.fedAuthToken, 'ucs2');\n          const buf = Buffer.alloc(10);\n          let offset = 0;\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, offset);\n          offset = buf.writeUInt32LE(token.length + 4 + 1, offset);\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.LIBRARY_SECURITYTOKEN << 1 | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), offset);\n          buf.writeInt32LE(token.length, offset);\n          buffers.push(buf);\n          buffers.push(token);\n          break;\n      }\n    }\n    if (this.tdsVersion >= _tdsVersions.versions['7_4']) {\n      // Signal UTF-8 support: Value 0x0A, bit 0 must be set to 1. Added in TDS 7.4.\n      const UTF8_SUPPORT_FEATURE_ID = 0x0a;\n      const UTF8_SUPPORT_CLIENT_SUPPORTS_UTF8 = 0x01;\n      const buf = Buffer.alloc(6);\n      buf.writeUInt8(UTF8_SUPPORT_FEATURE_ID, 0);\n      buf.writeUInt32LE(1, 1);\n      buf.writeUInt8(UTF8_SUPPORT_CLIENT_SUPPORTS_UTF8, 5);\n      buffers.push(buf);\n    }\n    buffers.push(Buffer.from([FEATURE_EXT_TERMINATOR]));\n    return Buffer.concat(buffers);\n  }\n  buildOptionFlags2() {\n    let flags2 = FLAGS_2.INIT_LANG_WARN | FLAGS_2.ODBC_OFF | FLAGS_2.USER_NORMAL;\n    if (this.sspi) {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_ON;\n    } else {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_OFF;\n    }\n    return flags2;\n  }\n  buildTypeFlags() {\n    let typeFlags = TYPE_FLAGS.SQL_DFLT | TYPE_FLAGS.OLEDB_OFF;\n    if (this.readOnlyIntent) {\n      typeFlags |= TYPE_FLAGS.READ_ONLY_INTENT;\n    } else {\n      typeFlags |= TYPE_FLAGS.READ_WRITE_INTENT;\n    }\n    return typeFlags;\n  }\n  buildOptionFlags3() {\n    return FLAGS_3.CHANGE_PASSWORD_NO | FLAGS_3.UNKNOWN_COLLATION_HANDLING | FLAGS_3.EXTENSION_USED;\n  }\n  scramblePassword(password) {\n    for (let b = 0, len = password.length; b < len; b++) {\n      let byte = password[b];\n      const lowNibble = byte & 0x0f;\n      const highNibble = byte >> 4;\n      byte = lowNibble << 4 | highNibble;\n      byte = byte ^ 0xa5;\n      password[b] = byte;\n    }\n    return password;\n  }\n  toString() {\n    let indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return indent + 'Login7 - ' + (0, _sprintfJs.sprintf)('TDS:0x%08X, PacketSize:0x%08X, ClientProgVer:0x%08X, ClientPID:0x%08X, ConnectionID:0x%08X', this.tdsVersion, this.packetSize, this.clientProgVer, this.clientPid, this.connectionId) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)('Flags1:0x%02X, Flags2:0x%02X, TypeFlags:0x%02X, Flags3:0x%02X, ClientTimezone:%d, ClientLCID:0x%08X', this.buildOptionFlags1(), this.buildOptionFlags2(), this.buildTypeFlags(), this.buildOptionFlags3(), this.clientTimeZone, this.clientLcid) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)(\"Hostname:'%s', Username:'%s', Password:'%s', AppName:'%s', ServerName:'%s', LibraryName:'%s'\", this.hostname, this.userName, this.password, this.appName, this.serverName, this.libraryName) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)(\"Language:'%s', Database:'%s', SSPI:'%s', AttachDbFile:'%s', ChangePassword:'%s'\", this.language, this.database, this.sspi, this.attachDbFile, this.changePassword);\n  }\n}\nvar _default = Login7Payload;\nexports.default = _default;\nmodule.exports = Login7Payload;","map":{"version":3,"names":["_sprintfJs","require","_tdsVersions","FLAGS_1","ENDIAN_LITTLE","ENDIAN_BIG","CHARSET_ASCII","CHARSET_EBCDIC","FLOAT_IEEE_754","FLOAT_VAX","FLOAT_ND5000","BCP_DUMPLOAD_ON","BCP_DUMPLOAD_OFF","USE_DB_ON","USE_DB_OFF","INIT_DB_WARN","INIT_DB_FATAL","SET_LANG_WARN_OFF","SET_LANG_WARN_ON","FLAGS_2","INIT_LANG_WARN","INIT_LANG_FATAL","ODBC_OFF","ODBC_ON","F_TRAN_BOUNDARY","F_CACHE_CONNECT","USER_NORMAL","USER_SERVER","USER_REMUSER","USER_SQLREPL","INTEGRATED_SECURITY_OFF","INTEGRATED_SECURITY_ON","TYPE_FLAGS","SQL_DFLT","SQL_TSQL","OLEDB_OFF","OLEDB_ON","READ_WRITE_INTENT","READ_ONLY_INTENT","FLAGS_3","CHANGE_PASSWORD_NO","CHANGE_PASSWORD_YES","BINARY_XML","SPAWN_USER_INSTANCE","UNKNOWN_COLLATION_HANDLING","EXTENSION_USED","FEDAUTH_OPTIONS","FEATURE_ID","LIBRARY_SECURITYTOKEN","LIBRARY_ADAL","FEDAUTH_YES_ECHO","FEDAUTH_NO_ECHO","ADAL_WORKFLOW_USER_PASS","ADAL_WORKFLOW_INTEGRATED","FEATURE_EXT_TERMINATOR","Login7Payload","constructor","_ref","tdsVersion","packetSize","clientProgVer","clientPid","connectionId","clientTimeZone","clientLcid","readOnlyIntent","initDbFatal","userName","password","serverName","appName","hostname","libraryName","language","database","clientId","sspi","attachDbFile","changePassword","fedAuth","undefined","toBuffer","fixedData","Buffer","alloc","buffers","offset","dataOffset","length","writeUInt32LE","writeUInt8","buildOptionFlags1","buildOptionFlags2","buildTypeFlags","buildOptionFlags3","writeInt32LE","writeUInt16LE","buffer","from","push","scramblePassword","extensions","buildFeatureExt","extensionOffset","copy","data","concat","flags1","type","echo","workflow","token","fedAuthToken","buf","versions","UTF8_SUPPORT_FEATURE_ID","UTF8_SUPPORT_CLIENT_SUPPORTS_UTF8","flags2","typeFlags","b","len","byte","lowNibble","highNibble","toString","indent","arguments","sprintf","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/login7-payload.ts"],"sourcesContent":["import { sprintf } from 'sprintf-js';\nimport { versions } from './tds-versions';\n\nconst FLAGS_1 = {\n  ENDIAN_LITTLE: 0x00,\n  ENDIAN_BIG: 0x01,\n  CHARSET_ASCII: 0x00,\n  CHARSET_EBCDIC: 0x02,\n  FLOAT_IEEE_754: 0x00,\n  FLOAT_VAX: 0x04,\n  FLOAT_ND5000: 0x08,\n  BCP_DUMPLOAD_ON: 0x00,\n  BCP_DUMPLOAD_OFF: 0x10,\n  USE_DB_ON: 0x00,\n  USE_DB_OFF: 0x20,\n  INIT_DB_WARN: 0x00,\n  INIT_DB_FATAL: 0x40,\n  SET_LANG_WARN_OFF: 0x00,\n  SET_LANG_WARN_ON: 0x80\n};\n\nconst FLAGS_2 = {\n  INIT_LANG_WARN: 0x00,\n  INIT_LANG_FATAL: 0x01,\n  ODBC_OFF: 0x00,\n  ODBC_ON: 0x02,\n  F_TRAN_BOUNDARY: 0x04,\n  F_CACHE_CONNECT: 0x08,\n  USER_NORMAL: 0x00,\n  USER_SERVER: 0x10,\n  USER_REMUSER: 0x20,\n  USER_SQLREPL: 0x40,\n  INTEGRATED_SECURITY_OFF: 0x00,\n  INTEGRATED_SECURITY_ON: 0x80\n};\n\nconst TYPE_FLAGS = {\n  SQL_DFLT: 0x00,\n  SQL_TSQL: 0x08,\n  OLEDB_OFF: 0x00,\n  OLEDB_ON: 0x10,\n  READ_WRITE_INTENT: 0x00,\n  READ_ONLY_INTENT: 0x20\n};\n\nconst FLAGS_3 = {\n  CHANGE_PASSWORD_NO: 0x00,\n  CHANGE_PASSWORD_YES: 0x01,\n  BINARY_XML: 0x02,\n  SPAWN_USER_INSTANCE: 0x04,\n  UNKNOWN_COLLATION_HANDLING: 0x08,\n  EXTENSION_USED: 0x10\n};\n\nconst FEDAUTH_OPTIONS = {\n  FEATURE_ID: 0x02,\n  LIBRARY_SECURITYTOKEN: 0x01,\n  LIBRARY_ADAL: 0x02,\n  FEDAUTH_YES_ECHO: 0x01,\n  FEDAUTH_NO_ECHO: 0x00,\n  ADAL_WORKFLOW_USER_PASS: 0x01,\n  ADAL_WORKFLOW_INTEGRATED: 0x02\n};\n\nconst FEATURE_EXT_TERMINATOR = 0xFF;\n\ninterface Options {\n  tdsVersion: number;\n  packetSize: number;\n  clientProgVer: number;\n  clientPid: number;\n  connectionId: number;\n  clientTimeZone: number;\n  clientLcid: number;\n}\n\n/*\n  s2.2.6.3\n */\nclass Login7Payload {\n  tdsVersion: number;\n  packetSize: number;\n  clientProgVer: number;\n  clientPid: number;\n  connectionId: number;\n  clientTimeZone: number;\n  clientLcid: number;\n\n  readOnlyIntent: boolean;\n  initDbFatal: boolean;\n\n  userName: string | undefined;\n  password: string | undefined;\n  serverName: string | undefined;\n  appName: string | undefined;\n  hostname: string | undefined;\n  libraryName: string | undefined;\n  language: string | undefined;\n  database: string | undefined;\n  clientId: Buffer | undefined;\n  sspi: Buffer | undefined;\n  attachDbFile: string | undefined;\n  changePassword: string | undefined;\n\n  fedAuth: { type: 'ADAL', echo: boolean, workflow: 'default' | 'integrated' } | { type: 'SECURITYTOKEN', echo: boolean, fedAuthToken: string } | undefined;\n\n  constructor({ tdsVersion, packetSize, clientProgVer, clientPid, connectionId, clientTimeZone, clientLcid }: Options) {\n    this.tdsVersion = tdsVersion;\n    this.packetSize = packetSize;\n    this.clientProgVer = clientProgVer;\n    this.clientPid = clientPid;\n    this.connectionId = connectionId;\n    this.clientTimeZone = clientTimeZone;\n    this.clientLcid = clientLcid;\n\n    this.readOnlyIntent = false;\n    this.initDbFatal = false;\n\n    this.fedAuth = undefined;\n\n    this.userName = undefined;\n    this.password = undefined;\n    this.serverName = undefined;\n    this.appName = undefined;\n    this.hostname = undefined;\n    this.libraryName = undefined;\n    this.language = undefined;\n    this.database = undefined;\n    this.clientId = undefined;\n    this.sspi = undefined;\n    this.attachDbFile = undefined;\n    this.changePassword = undefined;\n  }\n\n  toBuffer() {\n    const fixedData = Buffer.alloc(94);\n    const buffers = [fixedData];\n\n    let offset = 0;\n    let dataOffset = fixedData.length;\n\n    // Length: 4-byte\n    offset = fixedData.writeUInt32LE(0, offset);\n\n    // TDSVersion: 4-byte\n    offset = fixedData.writeUInt32LE(this.tdsVersion, offset);\n\n    // PacketSize: 4-byte\n    offset = fixedData.writeUInt32LE(this.packetSize, offset);\n\n    // ClientProgVer: 4-byte\n    offset = fixedData.writeUInt32LE(this.clientProgVer, offset);\n\n    // ClientPID: 4-byte\n    offset = fixedData.writeUInt32LE(this.clientPid, offset);\n\n    // ConnectionID: 4-byte\n    offset = fixedData.writeUInt32LE(this.connectionId, offset);\n\n    // OptionFlags1: 1-byte\n    offset = fixedData.writeUInt8(this.buildOptionFlags1(), offset);\n\n    // OptionFlags2: 1-byte\n    offset = fixedData.writeUInt8(this.buildOptionFlags2(), offset);\n\n    // TypeFlags: 1-byte\n    offset = fixedData.writeUInt8(this.buildTypeFlags(), offset);\n\n    // OptionFlags3: 1-byte\n    offset = fixedData.writeUInt8(this.buildOptionFlags3(), offset);\n\n    // ClientTimZone: 4-byte\n    offset = fixedData.writeInt32LE(this.clientTimeZone, offset);\n\n    // ClientLCID: 4-byte\n    offset = fixedData.writeUInt32LE(this.clientLcid, offset);\n\n    // ibHostName: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchHostName: 2-byte\n    if (this.hostname) {\n      const buffer = Buffer.from(this.hostname, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(dataOffset, offset);\n    }\n\n    // ibUserName: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchUserName: 2-byte\n    if (this.userName) {\n      const buffer = Buffer.from(this.userName, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibPassword: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchPassword: 2-byte\n    if (this.password) {\n      const buffer = Buffer.from(this.password, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(this.scramblePassword(buffer));\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibAppName: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchAppName: 2-byte\n    if (this.appName) {\n      const buffer = Buffer.from(this.appName, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibServerName: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchServerName: 2-byte\n    if (this.serverName) {\n      const buffer = Buffer.from(this.serverName, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // (ibUnused / ibExtension): 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // (cchUnused / cbExtension): 2-byte\n    const extensions = this.buildFeatureExt();\n    offset = fixedData.writeUInt16LE(4, offset);\n    const extensionOffset = Buffer.alloc(4);\n    extensionOffset.writeUInt32LE(dataOffset += 4, 0);\n    dataOffset += extensions.length;\n    buffers.push(extensionOffset, extensions);\n\n    // ibCltIntName: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchCltIntName: 2-byte\n    if (this.libraryName) {\n      const buffer = Buffer.from(this.libraryName, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibLanguage: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchLanguage: 2-byte\n    if (this.language) {\n      const buffer = Buffer.from(this.language, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibDatabase: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchDatabase: 2-byte\n    if (this.database) {\n      const buffer = Buffer.from(this.database, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ClientID: 6-byte\n    if (this.clientId) {\n      this.clientId.copy(fixedData, offset, 0, 6);\n    }\n    offset += 6;\n\n    // ibSSPI: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cbSSPI: 2-byte\n    if (this.sspi) {\n      if (this.sspi.length > 65535) {\n        offset = fixedData.writeUInt16LE(65535, offset);\n      } else {\n        offset = fixedData.writeUInt16LE(this.sspi.length, offset);\n      }\n\n      buffers.push(this.sspi);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibAtchDBFile: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchAtchDBFile: 2-byte\n    if (this.attachDbFile) {\n      const buffer = Buffer.from(this.attachDbFile, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // ibChangePassword: 2-byte\n    offset = fixedData.writeUInt16LE(dataOffset, offset);\n\n    // cchChangePassword: 2-byte\n    if (this.changePassword) {\n      const buffer = Buffer.from(this.changePassword, 'ucs2');\n\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    }\n\n    // cbSSPILong: 4-byte\n    if (this.sspi && this.sspi.length > 65535) {\n      fixedData.writeUInt32LE(this.sspi.length, offset);\n    } else {\n      fixedData.writeUInt32LE(0, offset);\n    }\n\n    const data = Buffer.concat(buffers);\n    data.writeUInt32LE(data.length, 0);\n    return data;\n  }\n\n  buildOptionFlags1() {\n    let flags1 = FLAGS_1.ENDIAN_LITTLE | FLAGS_1.CHARSET_ASCII | FLAGS_1.FLOAT_IEEE_754 | FLAGS_1.BCP_DUMPLOAD_OFF | FLAGS_1.USE_DB_OFF | FLAGS_1.SET_LANG_WARN_ON;\n    if (this.initDbFatal) {\n      flags1 |= FLAGS_1.INIT_DB_FATAL;\n    } else {\n      flags1 |= FLAGS_1.INIT_DB_WARN;\n    }\n    return flags1;\n  }\n\n  buildFeatureExt() {\n    const buffers = [];\n\n    const fedAuth = this.fedAuth;\n    if (fedAuth) {\n      switch (fedAuth.type) {\n        case 'ADAL':\n          const buffer = Buffer.alloc(7);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, 0);\n          buffer.writeUInt32LE(2, 1);\n          buffer.writeUInt8((FEDAUTH_OPTIONS.LIBRARY_ADAL << 1) | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), 5);\n          buffer.writeUInt8(fedAuth.workflow === 'integrated' ? 0x02 : FEDAUTH_OPTIONS.ADAL_WORKFLOW_USER_PASS, 6);\n          buffers.push(buffer);\n          break;\n\n        case 'SECURITYTOKEN':\n          const token = Buffer.from(fedAuth.fedAuthToken, 'ucs2');\n          const buf = Buffer.alloc(10);\n\n          let offset = 0;\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, offset);\n          offset = buf.writeUInt32LE(token.length + 4 + 1, offset);\n          offset = buf.writeUInt8((FEDAUTH_OPTIONS.LIBRARY_SECURITYTOKEN << 1) | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), offset);\n          buf.writeInt32LE(token.length, offset);\n\n          buffers.push(buf);\n          buffers.push(token);\n\n          break;\n      }\n    }\n\n    if (this.tdsVersion >= versions['7_4']) {\n      // Signal UTF-8 support: Value 0x0A, bit 0 must be set to 1. Added in TDS 7.4.\n      const UTF8_SUPPORT_FEATURE_ID = 0x0a;\n      const UTF8_SUPPORT_CLIENT_SUPPORTS_UTF8 = 0x01;\n      const buf = Buffer.alloc(6);\n      buf.writeUInt8(UTF8_SUPPORT_FEATURE_ID, 0);\n      buf.writeUInt32LE(1, 1);\n      buf.writeUInt8(UTF8_SUPPORT_CLIENT_SUPPORTS_UTF8, 5);\n      buffers.push(buf);\n    }\n\n    buffers.push(Buffer.from([FEATURE_EXT_TERMINATOR]));\n\n    return Buffer.concat(buffers);\n  }\n\n  buildOptionFlags2() {\n    let flags2 = FLAGS_2.INIT_LANG_WARN | FLAGS_2.ODBC_OFF | FLAGS_2.USER_NORMAL;\n    if (this.sspi) {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_ON;\n    } else {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_OFF;\n    }\n    return flags2;\n  }\n\n  buildTypeFlags() {\n    let typeFlags = TYPE_FLAGS.SQL_DFLT | TYPE_FLAGS.OLEDB_OFF;\n    if (this.readOnlyIntent) {\n      typeFlags |= TYPE_FLAGS.READ_ONLY_INTENT;\n    } else {\n      typeFlags |= TYPE_FLAGS.READ_WRITE_INTENT;\n    }\n    return typeFlags;\n  }\n\n  buildOptionFlags3() {\n    return FLAGS_3.CHANGE_PASSWORD_NO | FLAGS_3.UNKNOWN_COLLATION_HANDLING | FLAGS_3.EXTENSION_USED;\n  }\n\n  scramblePassword(password: Buffer) {\n    for (let b = 0, len = password.length; b < len; b++) {\n      let byte = password[b];\n      const lowNibble = byte & 0x0f;\n      const highNibble = byte >> 4;\n      byte = (lowNibble << 4) | highNibble;\n      byte = byte ^ 0xa5;\n      password[b] = byte;\n    }\n    return password;\n  }\n\n  toString(indent = '') {\n    return indent + 'Login7 - ' +\n      sprintf('TDS:0x%08X, PacketSize:0x%08X, ClientProgVer:0x%08X, ClientPID:0x%08X, ConnectionID:0x%08X',\n              this.tdsVersion, this.packetSize, this.clientProgVer, this.clientPid, this.connectionId\n      ) + '\\n' + indent + '         ' +\n      sprintf('Flags1:0x%02X, Flags2:0x%02X, TypeFlags:0x%02X, Flags3:0x%02X, ClientTimezone:%d, ClientLCID:0x%08X',\n              this.buildOptionFlags1(), this.buildOptionFlags2(), this.buildTypeFlags(), this.buildOptionFlags3(), this.clientTimeZone, this.clientLcid\n      ) + '\\n' + indent + '         ' +\n      sprintf(\"Hostname:'%s', Username:'%s', Password:'%s', AppName:'%s', ServerName:'%s', LibraryName:'%s'\",\n              this.hostname, this.userName, this.password, this.appName, this.serverName, this.libraryName\n      ) + '\\n' + indent + '         ' +\n      sprintf(\"Language:'%s', Database:'%s', SSPI:'%s', AttachDbFile:'%s', ChangePassword:'%s'\",\n              this.language, this.database, this.sspi, this.attachDbFile, this.changePassword\n      );\n  }\n}\n\nexport default Login7Payload;\nmodule.exports = Login7Payload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}