{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = void 0;\nvar _events = require(\"events\");\nvar _streamParser = _interopRequireDefault(require(\"./stream-parser\"));\nvar _stream = require(\"stream\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass Parser extends _events.EventEmitter {\n  constructor(message, debug, handler, options) {\n    super();\n    this.debug = void 0;\n    this.options = void 0;\n    this.parser = void 0;\n    this.debug = debug;\n    this.options = options;\n    this.parser = _stream.Readable.from(_streamParser.default.parseTokens(message, this.debug, this.options));\n    this.parser.on('data', token => {\n      handler[token.handlerName](token);\n    });\n    this.parser.on('drain', () => {\n      this.emit('drain');\n    });\n    this.parser.on('end', () => {\n      this.emit('end');\n    });\n  }\n  pause() {\n    return this.parser.pause();\n  }\n  resume() {\n    return this.parser.resume();\n  }\n}\nexports.Parser = Parser;","map":{"version":3,"names":["_events","require","_streamParser","_interopRequireDefault","_stream","Parser","EventEmitter","constructor","message","debug","handler","options","parser","Readable","from","default","parseTokens","on","token","handlerName","emit","pause","resume"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/token/token-stream-parser.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport StreamParser, { ParserOptions } from './stream-parser';\nimport Debug from '../debug';\nimport { Token } from './token';\nimport { Readable } from 'stream';\nimport Message from '../message';\nimport { TokenHandler } from './handler';\n\nexport class Parser extends EventEmitter {\n  debug: Debug;\n  options: ParserOptions;\n  parser: Readable;\n\n  constructor(message: Message, debug: Debug, handler: TokenHandler, options: ParserOptions) {\n    super();\n\n    this.debug = debug;\n    this.options = options;\n\n    this.parser = Readable.from(StreamParser.parseTokens(message, this.debug, this.options));\n    this.parser.on('data', (token: Token) => {\n      handler[token.handlerName as keyof TokenHandler](token as any);\n    });\n\n    this.parser.on('drain', () => {\n      this.emit('drain');\n    });\n\n    this.parser.on('end', () => {\n      this.emit('end');\n    });\n  }\n\n  declare on: (\n    ((event: 'end', listener: () => void) => this) &\n    ((event: string | symbol, listener: (...args: any[]) => void) => this)\n  );\n\n  pause() {\n    return this.parser.pause();\n  }\n\n  resume() {\n    return this.parser.resume();\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AAGA,IAAAG,OAAA,GAAAH,OAAA;;;;;;AAIO,MAAMI,MAAN,SAAqBL,OAAA,CAAAM,YAArB,CAAkC;EAKvCC,WAAWA,CAACC,OAAD,EAAmBC,KAAnB,EAAiCC,OAAjC,EAAwDC,OAAxD,EAAgF;IACzF;IADyF,KAJ3FF,KAI2F;IAAA,KAH3FE,OAG2F;IAAA,KAF3FC,MAE2F;IAGzF,KAAKH,KAAL,GAAaA,KAAb;IACA,KAAKE,OAAL,GAAeA,OAAf;IAEA,KAAKC,MAAL,GAAcR,OAAA,CAAAS,QAAA,CAASC,IAAT,CAAcZ,aAAA,CAAAa,OAAA,CAAaC,WAAb,CAAyBR,OAAzB,EAAkC,KAAKC,KAAvC,EAA8C,KAAKE,OAAnD,CAAd,CAAd;IACA,KAAKC,MAAL,CAAYK,EAAZ,CAAe,MAAf,EAAwBC,KAAD,IAAkB;MACvCR,OAAO,CAACQ,KAAK,CAACC,WAAP,CAAP,CAAiDD,KAAjD;IACD,CAFD;IAIA,KAAKN,MAAL,CAAYK,EAAZ,CAAe,OAAf,EAAwB,MAAM;MAC5B,KAAKG,IAAL,CAAU,OAAV;IACD,CAFD;IAIA,KAAKR,MAAL,CAAYK,EAAZ,CAAe,KAAf,EAAsB,MAAM;MAC1B,KAAKG,IAAL,CAAU,KAAV;IACD,CAFD;EAGD;EAODC,KAAKA,CAAA,EAAG;IACN,OAAO,KAAKT,MAAL,CAAYS,KAAZ,EAAP;EACD;EAEDC,MAAMA,CAAA,EAAG;IACP,OAAO,KAAKV,MAAL,CAAYU,MAAZ,EAAP;EACD;AApCsC"},"metadata":{},"sourceType":"script","externalDependencies":[]}