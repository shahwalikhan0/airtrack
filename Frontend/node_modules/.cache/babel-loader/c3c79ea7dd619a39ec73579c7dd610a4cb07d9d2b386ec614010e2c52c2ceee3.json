{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _intn = _interopRequireDefault(require(\"./intn\"));\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst DATA_LENGTH = Buffer.from([0x08]);\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst BigInt = {\n  id: 0x7F,\n  type: 'INT8',\n  name: 'BigInt',\n  declaration: function () {\n    return 'bigint';\n  },\n  generateTypeInfo() {\n    return Buffer.from([_intn.default.id, 0x08]);\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return DATA_LENGTH;\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    const buffer = new _writableTrackingBuffer.default(8);\n    buffer.writeInt64LE(Number(parameter.value));\n    yield buffer.data;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n    if (value < Number.MIN_SAFE_INTEGER || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(`Value must be between ${Number.MIN_SAFE_INTEGER} and ${Number.MAX_SAFE_INTEGER}, inclusive.  For smaller or bigger numbers, use VarChar type.`);\n    }\n    return value;\n  }\n};\nvar _default = BigInt;\nexports.default = _default;\nmodule.exports = BigInt;","map":{"version":3,"names":["_intn","_interopRequireDefault","require","_writableTrackingBuffer","DATA_LENGTH","Buffer","from","NULL_LENGTH","BigInt","id","type","name","declaration","generateTypeInfo","default","generateParameterLength","parameter","options","value","generateParameterData","buffer","writeInt64LE","Number","data","validate","isNaN","TypeError","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/data-types/bigint.ts"],"sourcesContent":["import { DataType } from '../data-type';\nimport IntN from './intn';\nimport WritableTrackingBuffer from '../tracking-buffer/writable-tracking-buffer';\n\nconst DATA_LENGTH = Buffer.from([0x08]);\nconst NULL_LENGTH = Buffer.from([0x00]);\n\nconst BigInt: DataType = {\n  id: 0x7F,\n  type: 'INT8',\n  name: 'BigInt',\n\n  declaration: function() {\n    return 'bigint';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([IntN.id, 0x08]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  * generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = new WritableTrackingBuffer(8);\n    buffer.writeInt64LE(Number(parameter.value));\n    yield buffer.data;\n  },\n\n  validate: function(value): null | number {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n\n    if (value < Number.MIN_SAFE_INTEGER || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(`Value must be between ${Number.MIN_SAFE_INTEGER} and ${Number.MAX_SAFE_INTEGER}, inclusive.  For smaller or bigger numbers, use VarChar type.`);\n    }\n\n    return value;\n  }\n};\n\nexport default BigInt;\nmodule.exports = BigInt;\n"],"mappings":";;;;;;AACA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAF,sBAAA,CAAAC,OAAA;;;;;;AAEA,MAAME,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AACA,MAAMC,WAAW,GAAGF,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AAEA,MAAME,MAAgB,GAAG;EACvBC,EAAE,EAAE,IADmB;EAEvBC,IAAI,EAAE,MAFiB;EAGvBC,IAAI,EAAE,QAHiB;EAKvBC,WAAW,EAAE,SAAAA,CAAA,EAAW;IACtB,OAAO,QAAP;EACD,CAPsB;EASvBC,gBAAgBA,CAAA,EAAG;IACjB,OAAOR,MAAM,CAACC,IAAP,CAAY,CAACN,KAAA,CAAAc,OAAA,CAAKL,EAAN,EAAU,IAAV,CAAZ,CAAP;EACD,CAXsB;EAavBM,uBAAuBA,CAACC,SAAD,EAAYC,OAAZ,EAAqB;IAC1C,IAAID,SAAS,CAACE,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,OAAOX,WAAP;IACD;IAED,OAAOH,WAAP;EACD,CAnBsB;EAqBvB,CAAEe,qBAAFA,CAAwBH,SAAxB,EAAmCC,OAAnC,EAA4C;IAC1C,IAAID,SAAS,CAACE,KAAV,IAAmB,IAAvB,EAA6B;MAC3B;IACD;IAED,MAAME,MAAM,GAAG,IAAIjB,uBAAA,CAAAW,OAAJ,CAA2B,CAA3B,CAAf;IACAM,MAAM,CAACC,YAAP,CAAoBC,MAAM,CAACN,SAAS,CAACE,KAAX,CAA1B;IACA,MAAME,MAAM,CAACG,IAAb;EACD,CA7BsB;EA+BvBC,QAAQ,EAAE,SAAAA,CAASN,KAAT,EAA+B;IACvC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;IAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7BA,KAAK,GAAGI,MAAM,CAACJ,KAAD,CAAd;IACD;IAED,IAAIO,KAAK,CAACP,KAAD,CAAT,EAAkB;MAChB,MAAM,IAAIQ,SAAJ,CAAc,iBAAd,CAAN;IACD;IAED,IAAIR,KAAK,GAAGI,MAAM,CAACK,gBAAf,IAAmCT,KAAK,GAAGI,MAAM,CAACM,gBAAtD,EAAwE;MACtE,MAAM,IAAIF,SAAJ,CAAe,yBAAwBJ,MAAM,CAACK,gBAAiB,QAAOL,MAAM,CAACM,gBAAiB,gEAA9F,CAAN;IACD;IAED,OAAOV,KAAP;EACD;AAjDsB,CAAzB;eAoDeV,M;;AACfqB,MAAM,CAACC,OAAP,GAAiBtB,MAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}