{"ast":null,"code":"'use strict';\n\nconst debug = require('debug')('mssql:tedi');\nconst BaseTransaction = require('../base/transaction');\nconst {\n  IDS\n} = require('../utils');\nconst TransactionError = require('../error/transaction-error');\nclass Transaction extends BaseTransaction {\n  constructor(parent) {\n    super(parent);\n    this._abort = () => {\n      if (!this._rollbackRequested) {\n        // transaction interrupted because of XACT_ABORT\n\n        const pc = this._acquiredConnection;\n\n        // defer releasing so connection can switch from SentClientRequest to LoggedIn state\n        setImmediate(this.parent.release.bind(this.parent), pc);\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort);\n        this._acquiredConnection = null;\n        this._acquiredConfig = null;\n        this._aborted = true;\n        this.emit('rollback', true);\n      }\n    };\n  }\n  _begin(isolationLevel, callback) {\n    super._begin(isolationLevel, err => {\n      if (err) return callback(err);\n      debug('transaction(%d): begin', IDS.get(this));\n      this.parent.acquire(this, (err, connection, config) => {\n        if (err) return callback(err);\n        this._acquiredConnection = connection;\n        this._acquiredConnection.on('rollbackTransaction', this._abort);\n        this._acquiredConfig = config;\n        connection.beginTransaction(err => {\n          if (err) err = new TransactionError(err);\n          debug('transaction(%d): begun', IDS.get(this));\n          callback(err);\n        }, this.name, this.isolationLevel);\n      });\n    });\n  }\n  _commit(callback) {\n    super._commit(err => {\n      if (err) return callback(err);\n      debug('transaction(%d): commit', IDS.get(this));\n      this._acquiredConnection.commitTransaction(err => {\n        if (err) err = new TransactionError(err);\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort);\n        this.parent.release(this._acquiredConnection);\n        this._acquiredConnection = null;\n        this._acquiredConfig = null;\n        if (!err) debug('transaction(%d): commited', IDS.get(this));\n        callback(err);\n      });\n    });\n  }\n  _rollback(callback) {\n    super._rollback(err => {\n      if (err) return callback(err);\n      debug('transaction(%d): rollback', IDS.get(this));\n      this._acquiredConnection.rollbackTransaction(err => {\n        if (err) err = new TransactionError(err);\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort);\n        this.parent.release(this._acquiredConnection);\n        this._acquiredConnection = null;\n        this._acquiredConfig = null;\n        if (!err) debug('transaction(%d): rolled back', IDS.get(this));\n        callback(err);\n      });\n    });\n  }\n}\nmodule.exports = Transaction;","map":{"version":3,"names":["debug","require","BaseTransaction","IDS","TransactionError","Transaction","constructor","parent","_abort","_rollbackRequested","pc","_acquiredConnection","setImmediate","release","bind","removeListener","_acquiredConfig","_aborted","emit","_begin","isolationLevel","callback","err","get","acquire","connection","config","on","beginTransaction","name","_commit","commitTransaction","_rollback","rollbackTransaction","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/mssql/lib/tedious/transaction.js"],"sourcesContent":["'use strict'\n\nconst debug = require('debug')('mssql:tedi')\nconst BaseTransaction = require('../base/transaction')\nconst { IDS } = require('../utils')\nconst TransactionError = require('../error/transaction-error')\n\nclass Transaction extends BaseTransaction {\n  constructor (parent) {\n    super(parent)\n\n    this._abort = () => {\n      if (!this._rollbackRequested) {\n        // transaction interrupted because of XACT_ABORT\n\n        const pc = this._acquiredConnection\n\n        // defer releasing so connection can switch from SentClientRequest to LoggedIn state\n        setImmediate(this.parent.release.bind(this.parent), pc)\n\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort)\n        this._acquiredConnection = null\n        this._acquiredConfig = null\n        this._aborted = true\n\n        this.emit('rollback', true)\n      }\n    }\n  }\n\n  _begin (isolationLevel, callback) {\n    super._begin(isolationLevel, err => {\n      if (err) return callback(err)\n\n      debug('transaction(%d): begin', IDS.get(this))\n\n      this.parent.acquire(this, (err, connection, config) => {\n        if (err) return callback(err)\n\n        this._acquiredConnection = connection\n        this._acquiredConnection.on('rollbackTransaction', this._abort)\n        this._acquiredConfig = config\n\n        connection.beginTransaction(err => {\n          if (err) err = new TransactionError(err)\n\n          debug('transaction(%d): begun', IDS.get(this))\n\n          callback(err)\n        }, this.name, this.isolationLevel)\n      })\n    })\n  }\n\n  _commit (callback) {\n    super._commit(err => {\n      if (err) return callback(err)\n\n      debug('transaction(%d): commit', IDS.get(this))\n\n      this._acquiredConnection.commitTransaction(err => {\n        if (err) err = new TransactionError(err)\n\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort)\n        this.parent.release(this._acquiredConnection)\n        this._acquiredConnection = null\n        this._acquiredConfig = null\n\n        if (!err) debug('transaction(%d): commited', IDS.get(this))\n\n        callback(err)\n      })\n    })\n  }\n\n  _rollback (callback) {\n    super._rollback(err => {\n      if (err) return callback(err)\n\n      debug('transaction(%d): rollback', IDS.get(this))\n\n      this._acquiredConnection.rollbackTransaction(err => {\n        if (err) err = new TransactionError(err)\n\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort)\n        this.parent.release(this._acquiredConnection)\n        this._acquiredConnection = null\n        this._acquiredConfig = null\n\n        if (!err) debug('transaction(%d): rolled back', IDS.get(this))\n\n        callback(err)\n      })\n    })\n  }\n}\n\nmodule.exports = Transaction\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}