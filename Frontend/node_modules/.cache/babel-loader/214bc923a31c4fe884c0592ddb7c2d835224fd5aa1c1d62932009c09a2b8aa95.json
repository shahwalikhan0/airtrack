{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _token = require(\"./token\");\nvar _valueParser = _interopRequireDefault(require(\"../value-parser\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// s2.2.7.17\nasync function rowParser(parser) {\n  const colMetadata = parser.colMetadata;\n  const length = colMetadata.length;\n  const columns = [];\n  for (let i = 0; i < length; i++) {\n    const currColMetadata = colMetadata[i];\n    let value;\n    (0, _valueParser.default)(parser, currColMetadata, parser.options, v => {\n      value = v;\n    });\n    while (parser.suspended) {\n      await parser.streamBuffer.waitForChunk();\n      parser.suspended = false;\n      const next = parser.next;\n      next();\n    }\n    columns.push({\n      value,\n      metadata: currColMetadata\n    });\n  }\n  if (parser.options.useColumnNames) {\n    const columnsMap = Object.create(null);\n    columns.forEach(column => {\n      const colName = column.metadata.colName;\n      if (columnsMap[colName] == null) {\n        columnsMap[colName] = column;\n      }\n    });\n    return new _token.RowToken(columnsMap);\n  } else {\n    return new _token.RowToken(columns);\n  }\n}\nvar _default = rowParser;\nexports.default = _default;\nmodule.exports = rowParser;","map":{"version":3,"names":["_token","require","_valueParser","_interopRequireDefault","rowParser","parser","colMetadata","length","columns","i","currColMetadata","value","default","options","v","suspended","streamBuffer","waitForChunk","next","push","metadata","useColumnNames","columnsMap","Object","create","forEach","column","colName","RowToken","module","exports"],"sources":["/Users/shahwalikhan/Desktop/my-app/node_modules/tedious/src/token/row-token-parser.ts"],"sourcesContent":["// s2.2.7.17\n\nimport Parser from './stream-parser';\nimport { ColumnMetadata } from './colmetadata-token-parser';\n\nimport { RowToken } from './token';\n\nimport valueParse from '../value-parser';\n\ninterface Column {\n  value: unknown;\n  metadata: ColumnMetadata;\n}\n\nasync function rowParser(parser: Parser): Promise<RowToken> {\n  const colMetadata = parser.colMetadata;\n  const length = colMetadata.length;\n  const columns: Column[] = [];\n\n  for (let i = 0; i < length; i++) {\n    const currColMetadata = colMetadata[i];\n    let value;\n    valueParse(parser, currColMetadata, parser.options, (v) => {\n      value = v;\n    });\n\n    while (parser.suspended) {\n      await parser.streamBuffer.waitForChunk();\n\n      parser.suspended = false;\n      const next = parser.next!;\n\n      next();\n    }\n    columns.push({\n      value,\n      metadata: currColMetadata\n    });\n  }\n\n  if (parser.options.useColumnNames) {\n    const columnsMap: { [key: string]: Column } = Object.create(null);\n\n    columns.forEach((column) => {\n      const colName = column.metadata.colName;\n      if (columnsMap[colName] == null) {\n        columnsMap[colName] = column;\n      }\n    });\n\n    return new RowToken(columnsMap);\n  } else {\n    return new RowToken(columns);\n  }\n}\n\nexport default rowParser;\nmodule.exports = rowParser;\n"],"mappings":";;;;;;AAKA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAC,sBAAA,CAAAF,OAAA;;;;;;;AAPA;AAcA,eAAeG,SAAfA,CAAyBC,MAAzB,EAA4D;EAC1D,MAAMC,WAAW,GAAGD,MAAM,CAACC,WAA3B;EACA,MAAMC,MAAM,GAAGD,WAAW,CAACC,MAA3B;EACA,MAAMC,OAAiB,GAAG,EAA1B;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;IAC/B,MAAMC,eAAe,GAAGJ,WAAW,CAACG,CAAD,CAAnC;IACA,IAAIE,KAAJ;IACA,IAAAT,YAAA,CAAAU,OAAA,EAAWP,MAAX,EAAmBK,eAAnB,EAAoCL,MAAM,CAACQ,OAA3C,EAAqDC,CAAD,IAAO;MACzDH,KAAK,GAAGG,CAAR;IACD,CAFD;IAIA,OAAOT,MAAM,CAACU,SAAd,EAAyB;MACvB,MAAMV,MAAM,CAACW,YAAP,CAAoBC,YAApB,EAAN;MAEAZ,MAAM,CAACU,SAAP,GAAmB,KAAnB;MACA,MAAMG,IAAI,GAAGb,MAAM,CAACa,IAApB;MAEAA,IAAI;IACL;IACDV,OAAO,CAACW,IAAR,CAAa;MACXR,KADW;MAEXS,QAAQ,EAAEV;IAFC,CAAb;EAID;EAED,IAAIL,MAAM,CAACQ,OAAP,CAAeQ,cAAnB,EAAmC;IACjC,MAAMC,UAAqC,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA9C;IAEAhB,OAAO,CAACiB,OAAR,CAAiBC,MAAD,IAAY;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACN,QAAP,CAAgBO,OAAhC;MACA,IAAIL,UAAU,CAACK,OAAD,CAAV,IAAuB,IAA3B,EAAiC;QAC/BL,UAAU,CAACK,OAAD,CAAV,GAAsBD,MAAtB;MACD;IACF,CALD;IAOA,OAAO,IAAI1B,MAAA,CAAA4B,QAAJ,CAAaN,UAAb,CAAP;EACD,CAXD,MAWO;IACL,OAAO,IAAItB,MAAA,CAAA4B,QAAJ,CAAapB,OAAb,CAAP;EACD;AACF;eAEcJ,S;;AACfyB,MAAM,CAACC,OAAP,GAAiB1B,SAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}